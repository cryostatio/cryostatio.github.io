"use strict";(self.webpackChunkcryostat_web=self.webpackChunkcryostat_web||[]).push([[7763],{54878:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "G": () => (/* binding */ VictoryGroup)\n});\n\n// EXTERNAL MODULE: ./node_modules/lodash/isEmpty.js\nvar isEmpty = __webpack_require__(41609);\nvar isEmpty_default = /*#__PURE__*/__webpack_require__.n(isEmpty);\n// EXTERNAL MODULE: ./node_modules/lodash/defaults.js\nvar defaults = __webpack_require__(91747);\nvar defaults_default = /*#__PURE__*/__webpack_require__.n(defaults);\n// EXTERNAL MODULE: ./node_modules/lodash/assign.js\nvar lodash_assign = __webpack_require__(28583);\nvar assign_default = /*#__PURE__*/__webpack_require__.n(lodash_assign);\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(45697);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/hooks/use-animation-state.js\nvar use_animation_state = __webpack_require__(16178);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/helpers.js\nvar helpers = __webpack_require__(95302);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/user-props.js\nvar user_props = __webpack_require__(80450);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/wrapper.js\nvar wrapper = __webpack_require__(82191);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/hooks/use-previous-props.js\nvar use_previous_props = __webpack_require__(40066);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/common-props.js\nvar common_props = __webpack_require__(5734);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-container/victory-container.js + 1 modules\nvar victory_container = __webpack_require__(3532);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-theme/victory-theme.js + 2 modules\nvar victory_theme = __webpack_require__(6673);\n// EXTERNAL MODULE: ./node_modules/victory-shared-events/es/victory-shared-events.js\nvar victory_shared_events = __webpack_require__(22755);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/scale.js\nvar victory_util_scale = __webpack_require__(74765);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/data.js + 1 modules\nvar data = __webpack_require__(26063);\n// EXTERNAL MODULE: ./node_modules/react-fast-compare/index.js\nvar react_fast_compare = __webpack_require__(69590);\nvar react_fast_compare_default = /*#__PURE__*/__webpack_require__.n(react_fast_compare);\n;// CONCATENATED MODULE: ./node_modules/victory-group/es/helper-methods.js\n\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50,\n  offset: 0\n}; // eslint-disable-next-line max-statements\n\nfunction getCalculatedProps(props, childComponents) {\n  var role = "group";\n  props = helpers/* modifyProps */.TY(props, fallbackProps, role);\n  var style = wrapper/* getStyle */.C2(props.theme, props.style, role);\n  var _props = props,\n      offset = _props.offset,\n      colorScale = _props.colorScale,\n      color = _props.color,\n      polar = _props.polar,\n      horizontal = _props.horizontal;\n  var categories = props.categories || wrapper/* getCategories */.CP(props, childComponents, null);\n  var datasets = props.datasets || wrapper/* getDataFromChildren */.D8(props, null);\n  var domain = {\n    x: wrapper/* getDomain */.ge(assign_default()({}, props, {\n      categories: categories\n    }), "x", childComponents),\n    y: wrapper/* getDomain */.ge(assign_default()({}, props, {\n      categories: categories\n    }), "y", childComponents)\n  };\n  var range = props.range || {\n    x: helpers/* getRange */.rx(props, "x"),\n    y: helpers/* getRange */.rx(props, "y")\n  };\n  var baseScale = {\n    x: victory_util_scale/* getScaleFromProps */.j$(props, "x") || wrapper/* getScale */.yZ(props, "x"),\n    y: victory_util_scale/* getScaleFromProps */.j$(props, "y") || wrapper/* getScale */.yZ(props, "y")\n  };\n  var scale = {\n    x: baseScale.x.domain(domain.x).range(props.horizontal ? range.y : range.x),\n    y: baseScale.y.domain(domain.y).range(props.horizontal ? range.x : range.y)\n  };\n  var origin = polar ? props.origin : helpers/* getPolarOrigin */.IW(props);\n  var padding = helpers/* getPadding */.tQ(props);\n  return {\n    datasets: datasets,\n    categories: categories,\n    range: range,\n    domain: domain,\n    horizontal: horizontal,\n    scale: scale,\n    style: style,\n    colorScale: colorScale,\n    color: color,\n    offset: offset,\n    origin: origin,\n    padding: padding\n  };\n} // We need to remove sharedEvents in order to memoize the calculated data\n// With shared events, the props change on every event, and every value is re-calculated\n\nvar withoutSharedEvents = function (props) {\n  var children = props.children;\n  var modifiedChildren = react.Children.toArray(children).map(function (child) {\n    return _objectSpread(_objectSpread({}, child), {}, {\n      props: helpers/* omit */.CE(child.props, ["sharedEvents"])\n    });\n  });\n  props.children = modifiedChildren;\n  return props;\n};\n\nfunction useMemoizedProps(initialProps) {\n  var modifiedProps = withoutSharedEvents(initialProps);\n\n  var _React$useState = react.useState(modifiedProps),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      props = _React$useState2[0],\n      setProps = _React$useState2[1]; // React.memo uses shallow equality to compare objects. This way props\n  // will only be re-calculated when they change.\n\n\n  react.useEffect(function () {\n    if (!react_fast_compare_default()(modifiedProps, props)) {\n      setProps(modifiedProps);\n    }\n  }, [props, setProps, modifiedProps]);\n  return react.useMemo(function () {\n    return getCalculatedProps(props, props.children);\n  }, [props]);\n}\n\nfunction pixelsToValue(props, axis, calculatedProps) {\n  if (!props.offset) {\n    return 0;\n  }\n\n  var currentAxis = helpers/* getCurrentAxis */.Uk(axis, props.horizontal);\n  var domain = calculatedProps.domain[axis];\n  var range = calculatedProps.range[currentAxis];\n  var domainExtent = Math.max.apply(Math, _toConsumableArray(domain)) - Math.min.apply(Math, _toConsumableArray(domain));\n  var rangeExtent = Math.max.apply(Math, _toConsumableArray(range)) - Math.min.apply(Math, _toConsumableArray(range));\n  return domainExtent / rangeExtent * props.offset;\n} // eslint-disable-next-line max-params\n\n\nfunction getX0(props, calculatedProps, index, role) {\n  var groupLength = role === "stack" ? calculatedProps.datasets[0].length : calculatedProps.datasets.length;\n  var center = (groupLength - 1) / 2;\n  var totalWidth = pixelsToValue(props, "x", calculatedProps);\n  return (index - center) * totalWidth;\n} // eslint-disable-next-line max-params\n\n\nfunction getPolarX0(props, calculatedProps, index, role) {\n  var groupLength = role === "stack" ? calculatedProps.datasets[0].length : calculatedProps.datasets.length;\n  var center = (groupLength - 1) / 2;\n  var width = getAngularWidth(props, calculatedProps);\n  return (index - center) * width;\n}\n\nfunction getAngularWidth(props, calculatedProps) {\n  var range = calculatedProps.range;\n  var angularRange = Math.abs(range.x[1] - range.x[0]);\n  var r = Math.max.apply(Math, _toConsumableArray(range.y));\n  return props.offset / (2 * Math.PI * r) * angularRange;\n}\n\nfunction getLabels(props, datasets, index) {\n  if (!props.labels) {\n    return undefined;\n  }\n\n  return Math.floor(datasets.length / 2) === index ? props.labels : undefined;\n}\n\nfunction getChildProps(props, calculatedProps) {\n  var categories = calculatedProps.categories,\n      domain = calculatedProps.domain,\n      range = calculatedProps.range,\n      scale = calculatedProps.scale,\n      horizontal = calculatedProps.horizontal,\n      origin = calculatedProps.origin,\n      padding = calculatedProps.padding;\n  var width = props.width,\n      height = props.height,\n      theme = props.theme,\n      polar = props.polar;\n  return {\n    height: height,\n    width: width,\n    theme: theme,\n    polar: polar,\n    origin: origin,\n    categories: categories,\n    domain: domain,\n    range: range,\n    scale: scale,\n    horizontal: horizontal,\n    padding: padding,\n    standalone: false\n  };\n}\n\nfunction getColorScale(props, child) {\n  var role = child.type && child.type.role;\n  var colorScaleOptions = child.props.colorScale || props.colorScale;\n\n  if (role !== "group" && role !== "stack") {\n    return undefined;\n  }\n\n  return props.theme && props.theme.group ? colorScaleOptions || props.theme.group.colorScale : colorScaleOptions;\n}\n\nfunction getDataWithOffset(props) {\n  var defaultDataset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var offset = arguments.length > 2 ? arguments[2] : undefined;\n  var dataset = props.data || props.y ? data/* getData */.Yu(props) : defaultDataset;\n  var xOffset = offset || 0;\n  return dataset.map(function (datum) {\n    var _x1 = datum._x instanceof Date ? new Date(datum._x.getTime() + xOffset) : datum._x + xOffset;\n\n    return assign_default()({}, datum, {\n      _x1: _x1\n    });\n  });\n}\n\nfunction getChildren(props, childComponents, calculatedProps) {\n  props = helpers/* modifyProps */.TY(props, fallbackProps, "stack");\n  childComponents = childComponents || react.Children.toArray(props.children);\n  calculatedProps = calculatedProps || getCalculatedProps(props, childComponents);\n  var _calculatedProps = calculatedProps,\n      datasets = _calculatedProps.datasets;\n  var _props2 = props,\n      labelComponent = _props2.labelComponent,\n      polar = _props2.polar;\n  var childProps = getChildProps(props, calculatedProps);\n  var parentName = props.name || "group";\n  return childComponents.map(function (child, index) {\n    var role = child.type && child.type.role;\n    var xOffset = polar ? getPolarX0(props, calculatedProps, index, role) : getX0(props, calculatedProps, index, role);\n    var style = role === "voronoi" || role === "tooltip" || role === "label" ? child.props.style : wrapper/* getChildStyle */.ny(child, index, calculatedProps);\n    var labels = props.labels ? getLabels(props, datasets, index) : child.props.labels;\n    var name = child.props.name || "".concat(parentName, "-").concat(role, "-").concat(index);\n    return /*#__PURE__*/react.cloneElement(child, assign_default()({\n      labels: labels,\n      style: style,\n      key: "".concat(name, "-key-").concat(index),\n      name: name,\n      data: getDataWithOffset(props, datasets[index], xOffset),\n      colorScale: getColorScale(props, child),\n      labelComponent: labelComponent || child.props.labelComponent,\n      xOffset: xOffset\n    }, childProps));\n  });\n}\n;// CONCATENATED MODULE: ./node_modules/victory-group/es/victory-group.js\n\n\n\n\nfunction victory_group_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction victory_group_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? victory_group_ownKeys(Object(source), !0).forEach(function (key) { victory_group_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : victory_group_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction victory_group_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\nvar victory_group_fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50,\n  offset: 0\n};\n\nvar VictoryGroupBase = function (initialProps) {\n  // eslint-disable-next-line no-use-before-define\n  var role = VictoryGroup === null || VictoryGroup === void 0 ? void 0 : VictoryGroup.role;\n\n  var _Hooks$useAnimationSt = use_animation_state/* useAnimationState */.h(),\n      getAnimationProps = _Hooks$useAnimationSt.getAnimationProps,\n      setAnimationState = _Hooks$useAnimationSt.setAnimationState,\n      getProps = _Hooks$useAnimationSt.getProps;\n\n  var props = getProps(initialProps);\n  var modifiedProps = helpers/* modifyProps */.TY(props, victory_group_fallbackProps, role);\n  var eventKey = modifiedProps.eventKey,\n      containerComponent = modifiedProps.containerComponent,\n      standalone = modifiedProps.standalone,\n      groupComponent = modifiedProps.groupComponent,\n      externalEventMutations = modifiedProps.externalEventMutations,\n      width = modifiedProps.width,\n      height = modifiedProps.height,\n      theme = modifiedProps.theme,\n      polar = modifiedProps.polar,\n      horizontal = modifiedProps.horizontal,\n      name = modifiedProps.name;\n  var childComponents = react.Children.toArray(modifiedProps.children);\n  var calculatedProps = useMemoizedProps(modifiedProps);\n  var domain = calculatedProps.domain,\n      scale = calculatedProps.scale,\n      style = calculatedProps.style,\n      origin = calculatedProps.origin;\n  var newChildren = react.useMemo(function () {\n    var children = getChildren(props, childComponents, calculatedProps);\n    return children.map(function (child, index) {\n      var childProps = assign_default()({\n        animate: getAnimationProps(props, child, index)\n      }, child.props);\n\n      return /*#__PURE__*/react.cloneElement(child, childProps);\n    });\n  }, [props, childComponents, calculatedProps, getAnimationProps]);\n  var containerProps = react.useMemo(function () {\n    if (standalone) {\n      return {\n        domain: domain,\n        scale: scale,\n        width: width,\n        height: height,\n        standalone: standalone,\n        theme: theme,\n        style: style.parent,\n        horizontal: horizontal,\n        polar: polar,\n        origin: origin,\n        name: name\n      };\n    }\n\n    return {};\n  }, [standalone, domain, scale, width, height, theme, style, horizontal, polar, origin, name]);\n  var userProps = react.useMemo(function () {\n    return user_props/* getSafeUserProps */.I(initialProps);\n  }, [initialProps]);\n  var container = react.useMemo(function () {\n    if (standalone) {\n      var defaultContainerProps = defaults_default()({}, containerComponent.props, containerProps, userProps);\n\n      return /*#__PURE__*/react.cloneElement(containerComponent, defaultContainerProps);\n    }\n\n    return /*#__PURE__*/react.cloneElement(groupComponent, userProps);\n  }, [groupComponent, standalone, containerComponent, containerProps, userProps]);\n  var events = react.useMemo(function () {\n    return wrapper/* getAllEvents */.IP(props);\n  }, [props]);\n  var previousProps = use_previous_props/* usePreviousProps */.Y(initialProps);\n  react.useEffect(function () {\n    // This is called before dismount to keep state in sync\n    return function () {\n      if (initialProps.animate) {\n        setAnimationState(previousProps, props);\n      }\n    };\n  }, [setAnimationState, previousProps, initialProps, props]);\n\n  if (!isEmpty_default()(events)) {\n    return /*#__PURE__*/react.createElement(victory_shared_events/* default */.Z, {\n      container: container,\n      eventKey: eventKey,\n      events: events,\n      externalEventMutations: externalEventMutations\n    }, newChildren);\n  }\n\n  return /*#__PURE__*/react.cloneElement(container, container.props, newChildren);\n};\n\nVictoryGroupBase.propTypes = victory_group_objectSpread(victory_group_objectSpread(victory_group_objectSpread({}, common_props/* CommonProps.baseProps */.l.baseProps), common_props/* CommonProps.dataProps */.l.dataProps), {}, {\n  children: prop_types_default().oneOfType([prop_types_default().arrayOf((prop_types_default()).node), (prop_types_default()).node]),\n  horizontal: (prop_types_default()).bool,\n  offset: (prop_types_default()).number\n});\nVictoryGroupBase.defaultProps = {\n  containerComponent: /*#__PURE__*/react.createElement(victory_container/* VictoryContainer */._, null),\n  groupComponent: /*#__PURE__*/react.createElement("g", null),\n  samples: 50,\n  sortOrder: "ascending",\n  standalone: true,\n  theme: victory_theme/* VictoryTheme.grayscale */.J.grayscale\n};\nvar componentConfig = {\n  role: "group",\n  expectedComponents: ["groupComponent", "containerComponent", "labelComponent"],\n  getChildren: getChildren\n};\nvar VictoryGroup = Object.assign( /*#__PURE__*/react.memo(VictoryGroupBase, (react_fast_compare_default())), componentConfig);\nVictoryGroup.displayName = "VictoryGroup";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///54878\n')}}]);