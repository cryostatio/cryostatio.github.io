"use strict";(self.webpackChunkcryostat_web=self.webpackChunkcryostat_web||[]).push([[9346],{50408:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"aO\": () => (/* binding */ ACTIONS),\n  \"FP\": () => (/* binding */ EVENTS),\n  \"Q_\": () => (/* binding */ STATUS),\n  \"ZP\": () => (/* binding */ Joyride)\n});\n\n// UNUSED EXPORTS: LIFECYCLE\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/tree-changes/esm/index.js + 1 modules\nvar esm = __webpack_require__(2494);\n;// CONCATENATED MODULE: ./node_modules/react-joyride/node_modules/is-lite/dist/index.mjs\n// src/index.ts\nvar DOM_PROPERTIES_TO_CHECK = [\n  \"innerHTML\",\n  \"ownerDocument\",\n  \"style\",\n  \"attributes\",\n  \"nodeValue\"\n];\nvar objectTypes = [\n  \"Array\",\n  \"ArrayBuffer\",\n  \"AsyncFunction\",\n  \"AsyncGenerator\",\n  \"AsyncGeneratorFunction\",\n  \"Date\",\n  \"Error\",\n  \"Function\",\n  \"Generator\",\n  \"GeneratorFunction\",\n  \"HTMLElement\",\n  \"Map\",\n  \"Object\",\n  \"Promise\",\n  \"RegExp\",\n  \"Set\",\n  \"WeakMap\",\n  \"WeakSet\"\n];\nvar primitiveTypes = [\n  \"bigint\",\n  \"boolean\",\n  \"null\",\n  \"number\",\n  \"string\",\n  \"symbol\",\n  \"undefined\"\n];\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (/HTML\\w+Element/.test(objectTypeName)) {\n    return \"HTMLElement\";\n  }\n  if (isObjectType(objectTypeName)) {\n    return objectTypeName;\n  }\n  return void 0;\n}\nfunction isObjectOfType(type) {\n  return (value) => getObjectType(value) === type;\n}\nfunction isObjectType(name) {\n  return objectTypes.includes(name);\n}\nfunction isOfType(type) {\n  return (value) => typeof value === type;\n}\nfunction isPrimitiveType(name) {\n  return primitiveTypes.includes(name);\n}\nfunction is(value) {\n  if (value === null) {\n    return \"null\";\n  }\n  switch (typeof value) {\n    case \"bigint\":\n      return \"bigint\";\n    case \"boolean\":\n      return \"boolean\";\n    case \"number\":\n      return \"number\";\n    case \"string\":\n      return \"string\";\n    case \"symbol\":\n      return \"symbol\";\n    case \"undefined\":\n      return \"undefined\";\n    default:\n  }\n  if (is.array(value)) {\n    return \"Array\";\n  }\n  if (is.plainFunction(value)) {\n    return \"Function\";\n  }\n  const tagType = getObjectType(value);\n  if (tagType) {\n    return tagType;\n  }\n  return \"Object\";\n}\nis.array = Array.isArray;\nis.arrayOf = (target, predicate) => {\n  if (!is.array(target) && !is.function(predicate)) {\n    return false;\n  }\n  return target.every((d) => predicate(d));\n};\nis.asyncGeneratorFunction = (value) => getObjectType(value) === \"AsyncGeneratorFunction\";\nis.asyncFunction = isObjectOfType(\"AsyncFunction\");\nis.bigint = isOfType(\"bigint\");\nis.boolean = (value) => {\n  return value === true || value === false;\n};\nis.date = isObjectOfType(\"Date\");\nis.defined = (value) => !is.undefined(value);\nis.domElement = (value) => {\n  return is.object(value) && !is.plainObject(value) && value.nodeType === 1 && is.string(value.nodeName) && DOM_PROPERTIES_TO_CHECK.every((property) => property in value);\n};\nis.empty = (value) => {\n  return is.string(value) && value.length === 0 || is.array(value) && value.length === 0 || is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length === 0 || is.set(value) && value.size === 0 || is.map(value) && value.size === 0;\n};\nis.error = isObjectOfType(\"Error\");\nis.function = isOfType(\"function\");\nis.generator = (value) => {\n  return is.iterable(value) && is.function(value.next) && is.function(value.throw);\n};\nis.generatorFunction = isObjectOfType(\"GeneratorFunction\");\nis.instanceOf = (instance, class_) => {\n  if (!instance || !class_) {\n    return false;\n  }\n  return Object.getPrototypeOf(instance) === class_.prototype;\n};\nis.iterable = (value) => {\n  return !is.nullOrUndefined(value) && is.function(value[Symbol.iterator]);\n};\nis.map = isObjectOfType(\"Map\");\nis.nan = (value) => {\n  return Number.isNaN(value);\n};\nis.null = (value) => {\n  return value === null;\n};\nis.nullOrUndefined = (value) => {\n  return is.null(value) || is.undefined(value);\n};\nis.number = (value) => {\n  return isOfType(\"number\")(value) && !is.nan(value);\n};\nis.numericString = (value) => {\n  return is.string(value) && value.length > 0 && !Number.isNaN(Number(value));\n};\nis.object = (value) => {\n  return !is.nullOrUndefined(value) && (is.function(value) || typeof value === \"object\");\n};\nis.oneOf = (target, value) => {\n  if (!is.array(target)) {\n    return false;\n  }\n  return target.indexOf(value) > -1;\n};\nis.plainFunction = isObjectOfType(\"Function\");\nis.plainObject = (value) => {\n  if (getObjectType(value) !== \"Object\") {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.getPrototypeOf({});\n};\nis.primitive = (value) => is.null(value) || isPrimitiveType(typeof value);\nis.promise = isObjectOfType(\"Promise\");\nis.propertyOf = (target, key, predicate) => {\n  if (!is.object(target) || !key) {\n    return false;\n  }\n  const value = target[key];\n  if (is.function(predicate)) {\n    return predicate(value);\n  }\n  return is.defined(value);\n};\nis.regexp = isObjectOfType(\"RegExp\");\nis.set = isObjectOfType(\"Set\");\nis.string = isOfType(\"string\");\nis.symbol = isOfType(\"symbol\");\nis.undefined = isOfType(\"undefined\");\nis.weakMap = isObjectOfType(\"WeakMap\");\nis.weakSet = isObjectOfType(\"WeakSet\");\nvar src_default = is;\n\n//# sourceMappingURL=index.mjs.map\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(73935);\n// EXTERNAL MODULE: ./node_modules/exenv/index.js\nvar exenv = __webpack_require__(58875);\nvar exenv_default = /*#__PURE__*/__webpack_require__.n(exenv);\n// EXTERNAL MODULE: ./node_modules/scroll/index.js\nvar node_modules_scroll = __webpack_require__(67339);\nvar scroll_default = /*#__PURE__*/__webpack_require__.n(node_modules_scroll);\n// EXTERNAL MODULE: ./node_modules/scrollparent/scrollparent.js\nvar scrollparent = __webpack_require__(27274);\nvar scrollparent_default = /*#__PURE__*/__webpack_require__.n(scrollparent);\n// EXTERNAL MODULE: ./node_modules/react-is/index.js\nvar react_is = __webpack_require__(59864);\n// EXTERNAL MODULE: ./node_modules/deepmerge/dist/cjs.js\nvar cjs = __webpack_require__(9996);\nvar cjs_default = /*#__PURE__*/__webpack_require__.n(cjs);\n// EXTERNAL MODULE: ./node_modules/react-floater/es/index.js\nvar es = __webpack_require__(53898);\n;// CONCATENATED MODULE: ./node_modules/react-joyride/es/index.js\n\n\n\n\n\n\n\n\n\n\n\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nvar ACTIONS = {\n  INIT: 'init',\n  START: 'start',\n  STOP: 'stop',\n  RESET: 'reset',\n  PREV: 'prev',\n  NEXT: 'next',\n  GO: 'go',\n  CLOSE: 'close',\n  SKIP: 'skip',\n  UPDATE: 'update'\n};\n\nvar EVENTS = {\n  TOUR_START: 'tour:start',\n  STEP_BEFORE: 'step:before',\n  BEACON: 'beacon',\n  TOOLTIP: 'tooltip',\n  STEP_AFTER: 'step:after',\n  TOUR_END: 'tour:end',\n  TOUR_STATUS: 'tour:status',\n  TARGET_NOT_FOUND: 'error:target_not_found',\n  ERROR: 'error'\n};\n\nvar LIFECYCLE = {\n  INIT: 'init',\n  READY: 'ready',\n  BEACON: 'beacon',\n  TOOLTIP: 'tooltip',\n  COMPLETE: 'complete',\n  ERROR: 'error'\n};\n\nvar STATUS = {\n  IDLE: 'idle',\n  READY: 'ready',\n  WAITING: 'waiting',\n  RUNNING: 'running',\n  PAUSED: 'paused',\n  SKIPPED: 'skipped',\n  FINISHED: 'finished',\n  ERROR: 'error'\n};\n\nvar canUseDOM = (exenv_default()).canUseDOM;\nvar isReact16 = react_dom.createPortal !== undefined;\n/**\n * Get the current browser\n *\n * @param {string} userAgent\n *\n * @returns {String}\n */\n\nfunction getBrowser() {\n  var userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : navigator.userAgent;\n  var browser = userAgent;\n\n  if (typeof window === 'undefined') {\n    browser = 'node';\n  } else if (document.documentMode) {\n    browser = 'ie';\n  } else if (/Edge/.test(userAgent)) {\n    browser = 'edge';\n  } // Opera 8.0+\n  else if (Boolean(window.opera) || userAgent.indexOf(' OPR/') >= 0) {\n    browser = 'opera';\n  } // Firefox 1.0+\n  else if (typeof window.InstallTrigger !== 'undefined') {\n    browser = 'firefox';\n  } // Chrome 1+\n  else if (window.chrome) {\n    browser = 'chrome';\n  } // Safari (and Chrome iOS, Firefox iOS)\n  else if (/(Version\\/([0-9._]+).*Safari|CriOS|FxiOS| Mobile\\/)/.test(userAgent)) {\n    browser = 'safari';\n  }\n\n  return browser;\n}\n/**\n * Get the toString Object type\n * @param {*} value\n * @returns {string}\n */\n\nfunction es_getObjectType(value) {\n  return Object.prototype.toString.call(value).slice(8, -1).toLowerCase();\n}\n/**\n * Get text from React components\n *\n * @param {*} root\n *\n * @returns {string}\n */\n\nfunction getText(root) {\n  var content = [];\n\n  var recurse = function recurse(child) {\n    /* istanbul ignore else */\n    if (typeof child === 'string' || typeof child === 'number') {\n      content.push(child);\n    } else if (Array.isArray(child)) {\n      child.forEach(function (c) {\n        return recurse(c);\n      });\n    } else if (child && child.props) {\n      var children = child.props.children;\n\n      if (Array.isArray(children)) {\n        children.forEach(function (c) {\n          return recurse(c);\n        });\n      } else {\n        recurse(children);\n      }\n    }\n  };\n\n  recurse(root);\n  return content.join(' ').trim();\n}\nfunction es_hasOwnProperty(value, key) {\n  return Object.prototype.hasOwnProperty.call(value, key);\n}\nfunction hasValidKeys(value, keys) {\n  if (!src_default.plainObject(value) || !src_default.array(keys)) {\n    return false;\n  }\n\n  return Object.keys(value).every(function (d) {\n    return keys.indexOf(d) !== -1;\n  });\n}\n/**\n * Convert hex to RGB\n *\n * @param {string} hex\n * @returns {Array}\n */\n\nfunction hexToRGB(hex) {\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  var properHex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(properHex);\n  return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)] : [];\n}\n/**\n * Decide if the step shouldn't skip the beacon\n * @param {Object} step\n *\n * @returns {boolean}\n */\n\nfunction hideBeacon(step) {\n  return step.disableBeacon || step.placement === 'center';\n}\n/**\n * Compare if two variables are equal\n *\n * @param {*} left\n * @param {*} right\n *\n * @returns {boolean}\n */\n\nfunction isEqual(left, right) {\n  var type;\n  var hasReactElement = /*#__PURE__*/(0,react.isValidElement)(left) || /*#__PURE__*/(0,react.isValidElement)(right);\n  var hasUndefined = src_default.undefined(left) || src_default.undefined(right);\n\n  if (es_getObjectType(left) !== es_getObjectType(right) || hasReactElement || hasUndefined) {\n    return false;\n  }\n\n  if (src_default.domElement(left)) {\n    return left.isSameNode(right);\n  }\n\n  if (src_default.number(left)) {\n    return left === right;\n  }\n\n  if (src_default[\"function\"](left)) {\n    return left.toString() === right.toString();\n  }\n\n  for (var key in left) {\n    /* istanbul ignore else */\n    if (es_hasOwnProperty(left, key)) {\n      if (typeof left[key] === 'undefined' || typeof right[key] === 'undefined') {\n        return false;\n      }\n\n      type = es_getObjectType(left[key]);\n\n      if (['object', 'array'].indexOf(type) !== -1 && isEqual(left[key], right[key])) {\n        continue;\n      }\n\n      if (type === 'function' && isEqual(left[key], right[key])) {\n        continue;\n      }\n\n      if (left[key] !== right[key]) {\n        return false;\n      }\n    }\n  }\n\n  for (var p in right) {\n    /* istanbul ignore else */\n    if (es_hasOwnProperty(right, p)) {\n      if (typeof left[p] === 'undefined') {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Detect legacy browsers\n *\n * @returns {boolean}\n */\n\nfunction isLegacy() {\n  return !(['chrome', 'safari', 'firefox', 'opera'].indexOf(getBrowser()) !== -1);\n}\n/**\n * Log method calls if debug is enabled\n *\n * @private\n * @param {Object}       arg\n * @param {string}       arg.title    - The title the logger was called from\n * @param {Object|Array} [arg.data]   - The data to be logged\n * @param {boolean}      [arg.warn]  - If true, the message will be a warning\n * @param {boolean}      [arg.debug] - Nothing will be logged unless debug is true\n */\n\nfunction log(_ref) {\n  var title = _ref.title,\n      data = _ref.data,\n      _ref$warn = _ref.warn,\n      warn = _ref$warn === void 0 ? false : _ref$warn,\n      _ref$debug = _ref.debug,\n      debug = _ref$debug === void 0 ? false : _ref$debug;\n\n  /* eslint-disable no-console */\n  var logFn = warn ? console.warn || console.error : console.log;\n\n  if (debug) {\n    if (title && data) {\n      console.groupCollapsed(\"%creact-joyride: \".concat(title), 'color: #ff0044; font-weight: bold; font-size: 12px;');\n\n      if (Array.isArray(data)) {\n        data.forEach(function (d) {\n          if (src_default.plainObject(d) && d.key) {\n            logFn.apply(console, [d.key, d.value]);\n          } else {\n            logFn.apply(console, [d]);\n          }\n        });\n      } else {\n        logFn.apply(console, [data]);\n      }\n\n      console.groupEnd();\n    } else {\n      console.error('Missing title or data props');\n    }\n  }\n  /* eslint-enable */\n\n}\n\nvar defaultState = {\n  action: '',\n  controlled: false,\n  index: 0,\n  lifecycle: LIFECYCLE.INIT,\n  size: 0,\n  status: STATUS.IDLE\n};\nvar validKeys = ['action', 'index', 'lifecycle', 'status'];\nfunction createStore(props) {\n  var store = new Map();\n  var data = new Map();\n\n  var Store = /*#__PURE__*/function () {\n    function Store() {\n      var _this = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$continuous = _ref.continuous,\n          continuous = _ref$continuous === void 0 ? false : _ref$continuous,\n          stepIndex = _ref.stepIndex,\n          _ref$steps = _ref.steps,\n          _steps = _ref$steps === void 0 ? [] : _ref$steps;\n\n      _classCallCheck(this, Store);\n\n      _defineProperty(this, \"listener\", void 0);\n\n      _defineProperty(this, \"setSteps\", function (steps) {\n        var _this$getState = _this.getState(),\n            size = _this$getState.size,\n            status = _this$getState.status;\n\n        var state = {\n          size: steps.length,\n          status: status\n        };\n        data.set('steps', steps);\n\n        if (status === STATUS.WAITING && !size && steps.length) {\n          state.status = STATUS.RUNNING;\n        }\n\n        _this.setState(state);\n      });\n\n      _defineProperty(this, \"addListener\", function (listener) {\n        _this.listener = listener;\n      });\n\n      _defineProperty(this, \"update\", function (state) {\n        if (!hasValidKeys(state, validKeys)) {\n          throw new Error(\"State is not valid. Valid keys: \".concat(validKeys.join(', ')));\n        }\n\n        _this.setState(_objectSpread2({}, _this.getNextState(_objectSpread2(_objectSpread2(_objectSpread2({}, _this.getState()), state), {}, {\n          action: state.action || ACTIONS.UPDATE\n        }), true)));\n      });\n\n      _defineProperty(this, \"start\", function (nextIndex) {\n        var _this$getState2 = _this.getState(),\n            index = _this$getState2.index,\n            size = _this$getState2.size;\n\n        _this.setState(_objectSpread2(_objectSpread2({}, _this.getNextState({\n          action: ACTIONS.START,\n          index: src_default.number(nextIndex) ? nextIndex : index\n        }, true)), {}, {\n          status: size ? STATUS.RUNNING : STATUS.WAITING\n        }));\n      });\n\n      _defineProperty(this, \"stop\", function () {\n        var advance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n        var _this$getState3 = _this.getState(),\n            index = _this$getState3.index,\n            status = _this$getState3.status;\n\n        if ([STATUS.FINISHED, STATUS.SKIPPED].indexOf(status) !== -1) return;\n\n        _this.setState(_objectSpread2(_objectSpread2({}, _this.getNextState({\n          action: ACTIONS.STOP,\n          index: index + (advance ? 1 : 0)\n        })), {}, {\n          status: STATUS.PAUSED\n        }));\n      });\n\n      _defineProperty(this, \"close\", function () {\n        var _this$getState4 = _this.getState(),\n            index = _this$getState4.index,\n            status = _this$getState4.status;\n\n        if (status !== STATUS.RUNNING) return;\n\n        _this.setState(_objectSpread2({}, _this.getNextState({\n          action: ACTIONS.CLOSE,\n          index: index + 1\n        })));\n      });\n\n      _defineProperty(this, \"go\", function (nextIndex) {\n        var _this$getState5 = _this.getState(),\n            controlled = _this$getState5.controlled,\n            status = _this$getState5.status;\n\n        if (controlled || status !== STATUS.RUNNING) return;\n\n        var step = _this.getSteps()[nextIndex];\n\n        _this.setState(_objectSpread2(_objectSpread2({}, _this.getNextState({\n          action: ACTIONS.GO,\n          index: nextIndex\n        })), {}, {\n          status: step ? status : STATUS.FINISHED\n        }));\n      });\n\n      _defineProperty(this, \"info\", function () {\n        return _this.getState();\n      });\n\n      _defineProperty(this, \"next\", function () {\n        var _this$getState6 = _this.getState(),\n            index = _this$getState6.index,\n            status = _this$getState6.status;\n\n        if (status !== STATUS.RUNNING) return;\n\n        _this.setState(_this.getNextState({\n          action: ACTIONS.NEXT,\n          index: index + 1\n        }));\n      });\n\n      _defineProperty(this, \"open\", function () {\n        var _this$getState7 = _this.getState(),\n            status = _this$getState7.status;\n\n        if (status !== STATUS.RUNNING) return;\n\n        _this.setState(_objectSpread2({}, _this.getNextState({\n          action: ACTIONS.UPDATE,\n          lifecycle: LIFECYCLE.TOOLTIP\n        })));\n      });\n\n      _defineProperty(this, \"prev\", function () {\n        var _this$getState8 = _this.getState(),\n            index = _this$getState8.index,\n            status = _this$getState8.status;\n\n        if (status !== STATUS.RUNNING) return;\n\n        _this.setState(_objectSpread2({}, _this.getNextState({\n          action: ACTIONS.PREV,\n          index: index - 1\n        })));\n      });\n\n      _defineProperty(this, \"reset\", function () {\n        var restart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n        var _this$getState9 = _this.getState(),\n            controlled = _this$getState9.controlled;\n\n        if (controlled) return;\n\n        _this.setState(_objectSpread2(_objectSpread2({}, _this.getNextState({\n          action: ACTIONS.RESET,\n          index: 0\n        })), {}, {\n          status: restart ? STATUS.RUNNING : STATUS.READY\n        }));\n      });\n\n      _defineProperty(this, \"skip\", function () {\n        var _this$getState10 = _this.getState(),\n            status = _this$getState10.status;\n\n        if (status !== STATUS.RUNNING) return;\n\n        _this.setState({\n          action: ACTIONS.SKIP,\n          lifecycle: LIFECYCLE.INIT,\n          status: STATUS.SKIPPED\n        });\n      });\n\n      this.setState({\n        action: ACTIONS.INIT,\n        controlled: src_default.number(stepIndex),\n        continuous: continuous,\n        index: src_default.number(stepIndex) ? stepIndex : 0,\n        lifecycle: LIFECYCLE.INIT,\n        status: _steps.length ? STATUS.READY : STATUS.IDLE\n      }, true);\n      this.setSteps(_steps);\n    }\n\n    _createClass(Store, [{\n      key: \"setState\",\n      value: function setState(nextState) {\n        var initial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var state = this.getState();\n\n        var _state$nextState = _objectSpread2(_objectSpread2({}, state), nextState),\n            action = _state$nextState.action,\n            index = _state$nextState.index,\n            lifecycle = _state$nextState.lifecycle,\n            size = _state$nextState.size,\n            status = _state$nextState.status;\n\n        store.set('action', action);\n        store.set('index', index);\n        store.set('lifecycle', lifecycle);\n        store.set('size', size);\n        store.set('status', status);\n\n        if (initial) {\n          store.set('controlled', nextState.controlled);\n          store.set('continuous', nextState.continuous);\n        }\n        /* istanbul ignore else */\n\n\n        if (this.listener && this.hasUpdatedState(state)) {\n          // console.log('▶ ▶ ▶ NEW STATE', this.getState());\n          this.listener(this.getState());\n        }\n      }\n    }, {\n      key: \"getState\",\n      value: function getState() {\n        if (!store.size) {\n          return _objectSpread2({}, defaultState);\n        }\n\n        return {\n          action: store.get('action') || '',\n          controlled: store.get('controlled') || false,\n          index: parseInt(store.get('index'), 10),\n          lifecycle: store.get('lifecycle') || '',\n          size: store.get('size') || 0,\n          status: store.get('status') || ''\n        };\n      }\n    }, {\n      key: \"getNextState\",\n      value: function getNextState(state) {\n        var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var _this$getState11 = this.getState(),\n            action = _this$getState11.action,\n            controlled = _this$getState11.controlled,\n            index = _this$getState11.index,\n            size = _this$getState11.size,\n            status = _this$getState11.status;\n\n        var newIndex = src_default.number(state.index) ? state.index : index;\n        var nextIndex = controlled && !force ? index : Math.min(Math.max(newIndex, 0), size);\n        return {\n          action: state.action || action,\n          controlled: controlled,\n          index: nextIndex,\n          lifecycle: state.lifecycle || LIFECYCLE.INIT,\n          size: state.size || size,\n          status: nextIndex === size ? STATUS.FINISHED : state.status || status\n        };\n      }\n    }, {\n      key: \"hasUpdatedState\",\n      value: function hasUpdatedState(oldState) {\n        var before = JSON.stringify(oldState);\n        var after = JSON.stringify(this.getState());\n        return before !== after;\n      }\n    }, {\n      key: \"getSteps\",\n      value: function getSteps() {\n        var steps = data.get('steps');\n        return Array.isArray(steps) ? steps : [];\n      }\n    }, {\n      key: \"getHelpers\",\n      value: function getHelpers() {\n        return {\n          close: this.close,\n          go: this.go,\n          info: this.info,\n          next: this.next,\n          open: this.open,\n          prev: this.prev,\n          reset: this.reset,\n          skip: this.skip\n        };\n      }\n    }]);\n\n    return Store;\n  }();\n\n  return new Store(props);\n}\n\n/**\n * Find the bounding client rect\n *\n * @private\n * @param {HTMLElement} element - The target element\n * @returns {Object}\n */\n\nfunction getClientRect(element) {\n  if (!element) {\n    return {};\n  }\n\n  return element.getBoundingClientRect();\n}\n/**\n * Helper function to get the browser-normalized \"document height\"\n * @returns {Number}\n */\n\nfunction getDocumentHeight() {\n  var _document = document,\n      body = _document.body,\n      html = _document.documentElement;\n\n  if (!body || !html) {\n    return 0;\n  }\n\n  return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n}\n/**\n * Find and return the target DOM element based on a step's 'target'.\n *\n * @private\n * @param {string|HTMLElement} element\n *\n * @returns {HTMLElement|null}\n */\n\nfunction getElement(element) {\n  /* istanbul ignore else */\n  if (typeof element === 'string') {\n    return document.querySelector(element);\n  }\n\n  return element;\n}\n/**\n *  Get computed style property\n *\n * @param {HTMLElement} el\n *\n * @returns {Object}\n */\n\nfunction getStyleComputedProperty(el) {\n  if (!el || el.nodeType !== 1) {\n    return {};\n  }\n\n  return getComputedStyle(el);\n}\n/**\n * Get scroll parent with fix\n *\n * @param {HTMLElement} element\n * @param {boolean} skipFix\n * @param {boolean} [forListener]\n *\n * @returns {*}\n */\n\nfunction getScrollParent(element, skipFix, forListener) {\n  var parent = scrollparent_default()(element);\n\n  if (parent.isSameNode(scrollDoc())) {\n    if (forListener) {\n      return document;\n    }\n\n    return scrollDoc();\n  }\n\n  var hasScrolling = parent.scrollHeight > parent.offsetHeight;\n  /* istanbul ignore else */\n\n  if (!hasScrolling && !skipFix) {\n    parent.style.overflow = 'initial';\n    return scrollDoc();\n  }\n\n  return parent;\n}\n/**\n * Check if the element has custom scroll parent\n *\n * @param {HTMLElement} element\n * @param {boolean} skipFix\n *\n * @returns {boolean}\n */\n\nfunction hasCustomScrollParent(element, skipFix) {\n  if (!element) return false;\n  var parent = getScrollParent(element, skipFix);\n  return !parent.isSameNode(scrollDoc());\n}\n/**\n * Check if the element has custom offset parent\n *\n * @param {HTMLElement} element\n *\n * @returns {boolean}\n */\n\nfunction hasCustomOffsetParent(element) {\n  return element.offsetParent !== document.body;\n}\n/**\n * Check if an element has fixed/sticky position\n * @param {HTMLElement|Node} el\n * @param {string} [type]\n *\n * @returns {boolean}\n */\n\nfunction hasPosition(el) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'fixed';\n\n  if (!el || !(el instanceof HTMLElement)) {\n    return false;\n  }\n\n  var nodeName = el.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n\n  if (getStyleComputedProperty(el).position === type) {\n    return true;\n  }\n\n  return hasPosition(el.parentNode, type);\n}\n/**\n * Check if the element is visible\n *\n * @param {HTMLElement} element\n *\n * @returns {boolean}\n */\n\nfunction isElementVisible(element) {\n  if (!element) return false;\n  var parentElement = element;\n\n  while (parentElement) {\n    if (parentElement === document.body) break;\n    /* istanbul ignore else */\n\n    if (parentElement instanceof HTMLElement) {\n      var _getComputedStyle = getComputedStyle(parentElement),\n          display = _getComputedStyle.display,\n          visibility = _getComputedStyle.visibility;\n\n      if (display === 'none' || visibility === 'hidden') {\n        return false;\n      }\n    }\n\n    parentElement = parentElement.parentNode;\n  }\n\n  return true;\n}\n/**\n * Find and return the target DOM element based on a step's 'target'.\n *\n * @private\n * @param {string|HTMLElement} element\n * @param {number} offset\n * @param {boolean} skipFix\n *\n * @returns {HTMLElement|undefined}\n */\n\nfunction getElementPosition(element, offset, skipFix) {\n  var elementRect = getClientRect(element);\n  var parent = getScrollParent(element, skipFix);\n  var hasScrollParent = hasCustomScrollParent(element, skipFix);\n  var parentTop = 0;\n  /* istanbul ignore else */\n\n  if (parent instanceof HTMLElement) {\n    parentTop = parent.scrollTop;\n  }\n\n  var top = elementRect.top + (!hasScrollParent && !hasPosition(element) ? parentTop : 0);\n  return Math.floor(top - offset);\n}\n/**\n * Get the offsetTop of each element up to the body\n *\n * @param {HTMLElement} element\n *\n * @returns {number}\n */\n\nfunction getTopOffset(element) {\n  if (element instanceof HTMLElement) {\n    if (element.offsetParent instanceof HTMLElement) {\n      return getTopOffset(element.offsetParent) + element.offsetTop;\n    }\n\n    return element.offsetTop;\n  }\n\n  return 0;\n}\n/**\n * Get the scrollTop position\n *\n * @param {HTMLElement} element\n * @param {number} offset\n * @param {boolean} skipFix\n *\n * @returns {number}\n */\n\nfunction getScrollTo(element, offset, skipFix) {\n  if (!element) {\n    return 0;\n  }\n\n  var parent = scrollparent_default()(element);\n  var top = getTopOffset(element);\n\n  if (hasCustomScrollParent(element, skipFix) && !hasCustomOffsetParent(element)) {\n    top -= getTopOffset(parent);\n  }\n\n  return Math.floor(top - offset);\n}\nfunction scrollDoc() {\n  return document.scrollingElement || document.createElement('body');\n}\n/**\n * Scroll to position\n * @param {number} value\n * @param {HTMLElement} element\n * @param {number} scrollDuration\n * @returns {Promise<*>}\n */\n\nfunction scrollTo(value) {\n  var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scrollDoc();\n  var scrollDuration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;\n  return new Promise(function (resolve, reject) {\n    var scrollTop = element.scrollTop;\n    var limit = value > scrollTop ? value - scrollTop : scrollTop - value;\n    scroll_default().top(element, value, {\n      duration: limit < 100 ? 50 : scrollDuration\n    }, function (error) {\n      if (error && error.message !== 'Element already at target scroll position') {\n        return reject(error);\n      }\n\n      return resolve();\n    });\n  });\n}\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n    /* istanbul ignore else */\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        return new Error(\"Required \".concat(location, \" `\").concat(propFullNameSafe, \"` was not specified in `\").concat(componentNameSafe, \"`.\"));\n      }\n\n      return null;\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      args[_key - 6] = arguments[_key];\n    }\n\n    return validate.apply(void 0, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n}\n\ncreateChainableTypeChecker(function (props, propName, componentName, location, propFullName) {\n  var propValue = props[propName];\n  var Component = propValue;\n\n  if (! /*#__PURE__*/react.isValidElement(propValue) && (0,react_is.isValidElementType)(propValue)) {\n    var ownProps = {\n      ref: function ref() {},\n      step: {}\n    };\n    Component = /*#__PURE__*/react.createElement(Component, ownProps);\n  }\n\n  if (src_default.string(propValue) || src_default.number(propValue) || !(0,react_is.isValidElementType)(propValue) || !([react_is.Element, react_is.ForwardRef].indexOf((0,react_is.typeOf)(Component)) !== -1)) {\n    return new Error(\"Invalid \".concat(location, \" `\").concat(propFullName, \"` supplied to `\").concat(componentName, \"`. Expected a React class or forwardRef.\"));\n  }\n\n  return undefined;\n});\n\nvar defaultOptions = {\n  arrowColor: '#fff',\n  backgroundColor: '#fff',\n  beaconSize: 36,\n  overlayColor: 'rgba(0, 0, 0, 0.5)',\n  primaryColor: '#f04',\n  spotlightShadow: '0 0 15px rgba(0, 0, 0, 0.5)',\n  textColor: '#333',\n  zIndex: 100\n};\nvar buttonBase = {\n  backgroundColor: 'transparent',\n  border: 0,\n  borderRadius: 0,\n  color: '#555',\n  cursor: 'pointer',\n  fontSize: 16,\n  lineHeight: 1,\n  padding: 8,\n  WebkitAppearance: 'none'\n};\nvar spotlight = {\n  borderRadius: 4,\n  position: 'absolute'\n};\nfunction getStyles() {\n  var stepStyles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = cjs_default()(defaultOptions, stepStyles.options || {});\n  var width = 290;\n\n  if (window.innerWidth > 480) {\n    width = 380;\n  }\n\n  if (options.width) {\n    if (window.innerWidth < options.width) {\n      width = window.innerWidth - 30;\n    } else {\n      width = options.width; //eslint-disable-line prefer-destructuring\n    }\n  }\n\n  var overlay = {\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    zIndex: options.zIndex\n  };\n  var defaultStyles = {\n    beacon: _objectSpread2(_objectSpread2({}, buttonBase), {}, {\n      display: 'inline-block',\n      height: options.beaconSize,\n      position: 'relative',\n      width: options.beaconSize,\n      zIndex: options.zIndex\n    }),\n    beaconInner: {\n      animation: 'joyride-beacon-inner 1.2s infinite ease-in-out',\n      backgroundColor: options.primaryColor,\n      borderRadius: '50%',\n      display: 'block',\n      height: '50%',\n      left: '50%',\n      opacity: 0.7,\n      position: 'absolute',\n      top: '50%',\n      transform: 'translate(-50%, -50%)',\n      width: '50%'\n    },\n    beaconOuter: {\n      animation: 'joyride-beacon-outer 1.2s infinite ease-in-out',\n      backgroundColor: \"rgba(\".concat(hexToRGB(options.primaryColor).join(','), \", 0.2)\"),\n      border: \"2px solid \".concat(options.primaryColor),\n      borderRadius: '50%',\n      boxSizing: 'border-box',\n      display: 'block',\n      height: '100%',\n      left: 0,\n      opacity: 0.9,\n      position: 'absolute',\n      top: 0,\n      transformOrigin: 'center',\n      width: '100%'\n    },\n    tooltip: {\n      backgroundColor: options.backgroundColor,\n      borderRadius: 5,\n      boxSizing: 'border-box',\n      color: options.textColor,\n      fontSize: 16,\n      maxWidth: '100%',\n      padding: 15,\n      position: 'relative',\n      width: width\n    },\n    tooltipContainer: {\n      lineHeight: 1.4,\n      textAlign: 'center'\n    },\n    tooltipTitle: {\n      fontSize: 18,\n      margin: 0\n    },\n    tooltipContent: {\n      padding: '20px 10px'\n    },\n    tooltipFooter: {\n      alignItems: 'center',\n      display: 'flex',\n      justifyContent: 'flex-end',\n      marginTop: 15\n    },\n    tooltipFooterSpacer: {\n      flex: 1\n    },\n    buttonNext: _objectSpread2(_objectSpread2({}, buttonBase), {}, {\n      backgroundColor: options.primaryColor,\n      borderRadius: 4,\n      color: '#fff'\n    }),\n    buttonBack: _objectSpread2(_objectSpread2({}, buttonBase), {}, {\n      color: options.primaryColor,\n      marginLeft: 'auto',\n      marginRight: 5\n    }),\n    buttonClose: _objectSpread2(_objectSpread2({}, buttonBase), {}, {\n      color: options.textColor,\n      height: 14,\n      padding: 15,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      width: 14\n    }),\n    buttonSkip: _objectSpread2(_objectSpread2({}, buttonBase), {}, {\n      color: options.textColor,\n      fontSize: 14\n    }),\n    overlay: _objectSpread2(_objectSpread2({}, overlay), {}, {\n      backgroundColor: options.overlayColor,\n      mixBlendMode: 'hard-light'\n    }),\n    overlayLegacy: _objectSpread2({}, overlay),\n    overlayLegacyCenter: _objectSpread2(_objectSpread2({}, overlay), {}, {\n      backgroundColor: options.overlayColor\n    }),\n    spotlight: _objectSpread2(_objectSpread2({}, spotlight), {}, {\n      backgroundColor: 'gray'\n    }),\n    spotlightLegacy: _objectSpread2(_objectSpread2({}, spotlight), {}, {\n      boxShadow: \"0 0 0 9999px \".concat(options.overlayColor, \", \").concat(options.spotlightShadow)\n    }),\n    floaterStyles: {\n      arrow: {\n        color: options.arrowColor\n      },\n      options: {\n        zIndex: options.zIndex + 100\n      }\n    },\n    options: options\n  };\n  return cjs_default()(defaultStyles, stepStyles);\n}\n\nvar DEFAULTS = {\n  floaterProps: {\n    options: {\n      preventOverflow: {\n        boundariesElement: 'scrollParent'\n      }\n    },\n    wrapperOptions: {\n      offset: -18,\n      position: true\n    }\n  },\n  locale: {\n    back: 'Back',\n    close: 'Close',\n    last: 'Last',\n    next: 'Next',\n    open: 'Open the dialog',\n    skip: 'Skip'\n  },\n  step: {\n    event: 'click',\n    placement: 'bottom',\n    offset: 10\n  }\n};\n\nfunction getTourProps(props) {\n  var sharedTourProps = ['beaconComponent', 'disableCloseOnEsc', 'disableOverlay', 'disableOverlayClose', 'disableScrolling', 'disableScrollParentFix', 'floaterProps', 'hideBackButton', 'hideCloseButton', 'locale', 'showProgress', 'showSkipButton', 'spotlightClicks', 'spotlightPadding', 'styles', 'tooltipComponent'];\n  return Object.keys(props).filter(function (d) {\n    return sharedTourProps.indexOf(d) !== -1;\n  }).reduce(function (acc, i) {\n    acc[i] = props[i]; //eslint-disable-line react/destructuring-assignment\n\n    return acc;\n  }, {});\n}\n\nfunction getMergedStep(step, props) {\n  if (!step) return null;\n  var mergedStep = cjs_default().all([getTourProps(props), DEFAULTS.step, step], {\n    isMergeableObject: src_default.plainObject\n  });\n  var mergedStyles = getStyles(cjs_default()(props.styles || {}, step.styles || {}));\n  var scrollParent = hasCustomScrollParent(getElement(step.target), mergedStep.disableScrollParentFix);\n  var floaterProps = cjs_default().all([props.floaterProps || {}, DEFAULTS.floaterProps, mergedStep.floaterProps || {}]); // Set react-floater props\n\n  floaterProps.offset = mergedStep.offset;\n  floaterProps.styles = cjs_default()(floaterProps.styles || {}, mergedStyles.floaterStyles || {});\n  delete mergedStyles.floaterStyles;\n  floaterProps.offset += props.spotlightPadding || step.spotlightPadding || 0;\n\n  if (step.placementBeacon) {\n    floaterProps.wrapperOptions.placement = step.placementBeacon;\n  }\n\n  if (scrollParent) {\n    floaterProps.options.preventOverflow.boundariesElement = 'window';\n  }\n\n  return _objectSpread2(_objectSpread2({}, mergedStep), {}, {\n    locale: cjs_default().all([DEFAULTS.locale, props.locale || {}, mergedStep.locale || {}]),\n    floaterProps: floaterProps,\n    styles: mergedStyles\n  });\n}\n/**\n * Validate if a step is valid\n *\n * @param {Object} step - A step object\n * @param {boolean} debug\n *\n * @returns {boolean} - True if the step is valid, false otherwise\n */\n\nfunction validateStep(step) {\n  var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (!src_default.plainObject(step)) {\n    log({\n      title: 'validateStep',\n      data: 'step must be an object',\n      warn: true,\n      debug: debug\n    });\n    return false;\n  }\n\n  if (!step.target) {\n    log({\n      title: 'validateStep',\n      data: 'target is missing from the step',\n      warn: true,\n      debug: debug\n    });\n    return false;\n  }\n\n  return true;\n}\n/**\n * Validate if steps is valid\n *\n * @param {Array} steps - A steps array\n * @param {boolean} debug\n *\n * @returns {boolean} - True if the steps are valid, false otherwise\n */\n\nfunction validateSteps(steps) {\n  var debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (!src_default.array(steps)) {\n    log({\n      title: 'validateSteps',\n      data: 'steps must be an array',\n      warn: true,\n      debug: debug\n    });\n    return false;\n  }\n\n  return steps.every(function (d) {\n    return validateStep(d, debug);\n  });\n}\n\nvar Scope = /*#__PURE__*/_createClass(function Scope(_element) {\n  var _this = this;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  _classCallCheck(this, Scope);\n\n  _defineProperty(this, \"element\", void 0);\n\n  _defineProperty(this, \"options\", void 0);\n\n  _defineProperty(this, \"canBeTabbed\", function (element) {\n    var tabIndex = element.tabIndex;\n    if (tabIndex === null || tabIndex < 0) tabIndex = undefined;\n    var isTabIndexNaN = isNaN(tabIndex);\n    return !isTabIndexNaN && _this.canHaveFocus(element);\n  });\n\n  _defineProperty(this, \"canHaveFocus\", function (element) {\n    var validTabNodes = /input|select|textarea|button|object/;\n    var nodeName = element.nodeName.toLowerCase();\n    var res = validTabNodes.test(nodeName) && !element.getAttribute('disabled') || nodeName === 'a' && !!element.getAttribute('href');\n    return res && _this.isVisible(element);\n  });\n\n  _defineProperty(this, \"findValidTabElements\", function () {\n    return [].slice.call(_this.element.querySelectorAll('*'), 0).filter(_this.canBeTabbed);\n  });\n\n  _defineProperty(this, \"handleKeyDown\", function (e) {\n    var _this$options$keyCode = _this.options.keyCode,\n        keyCode = _this$options$keyCode === void 0 ? 9 : _this$options$keyCode;\n    /* istanbul ignore else */\n\n    if (e.keyCode === keyCode) {\n      _this.interceptTab(e);\n    }\n  });\n\n  _defineProperty(this, \"interceptTab\", function (event) {\n    var elements = _this.findValidTabElements();\n\n    if (!elements.length) {\n      return;\n    }\n\n    event.preventDefault();\n    var shiftKey = event.shiftKey;\n    var x = elements.indexOf(document.activeElement);\n\n    if (x === -1 || !shiftKey && x + 1 === elements.length) {\n      x = 0;\n    } else if (shiftKey && x === 0) {\n      x = elements.length - 1;\n    } else {\n      x += shiftKey ? -1 : 1;\n    }\n\n    elements[x].focus();\n  });\n\n  _defineProperty(this, \"isHidden\", function (element) {\n    var noSize = element.offsetWidth <= 0 && element.offsetHeight <= 0;\n    var style = window.getComputedStyle(element);\n    if (noSize && !element.innerHTML) return true;\n    return noSize && style.getPropertyValue('overflow') !== 'visible' || style.getPropertyValue('display') === 'none';\n  });\n\n  _defineProperty(this, \"isVisible\", function (element) {\n    var parentElement = element;\n\n    while (parentElement) {\n      /* istanbul ignore else */\n      if (parentElement instanceof HTMLElement) {\n        if (parentElement === document.body) break;\n        /* istanbul ignore else */\n\n        if (_this.isHidden(parentElement)) return false;\n        parentElement = parentElement.parentNode;\n      }\n    }\n\n    return true;\n  });\n\n  _defineProperty(this, \"removeScope\", function () {\n    window.removeEventListener('keydown', _this.handleKeyDown);\n  });\n\n  _defineProperty(this, \"checkFocus\", function (target) {\n    if (document.activeElement !== target) {\n      target.focus();\n      window.requestAnimationFrame(function () {\n        return _this.checkFocus(target);\n      });\n    }\n  });\n\n  _defineProperty(this, \"setFocus\", function () {\n    var selector = _this.options.selector;\n    if (!selector) return;\n\n    var target = _this.element.querySelector(selector);\n    /* istanbul ignore else */\n\n\n    if (target) {\n      window.requestAnimationFrame(function () {\n        return _this.checkFocus(target);\n      });\n    }\n  });\n\n  if (!(_element instanceof HTMLElement)) {\n    throw new TypeError('Invalid parameter: element must be an HTMLElement');\n  }\n\n  this.element = _element;\n  this.options = options;\n  window.addEventListener('keydown', this.handleKeyDown, false);\n  this.setFocus();\n});\n\nvar JoyrideBeacon = /*#__PURE__*/function (_React$Component) {\n  _inherits(JoyrideBeacon, _React$Component);\n\n  var _super = _createSuper(JoyrideBeacon);\n\n  function JoyrideBeacon(props) {\n    var _this;\n\n    _classCallCheck(this, JoyrideBeacon);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"setBeaconRef\", function (c) {\n      _this.beacon = c;\n    });\n\n    if (!props.beaconComponent) {\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var style = document.createElement('style');\n      var css = \"\\n        @keyframes joyride-beacon-inner {\\n          20% {\\n            opacity: 0.9;\\n          }\\n        \\n          90% {\\n            opacity: 0.7;\\n          }\\n        }\\n        \\n        @keyframes joyride-beacon-outer {\\n          0% {\\n            transform: scale(1);\\n          }\\n        \\n          45% {\\n            opacity: 0.7;\\n            transform: scale(0.75);\\n          }\\n        \\n          100% {\\n            opacity: 0.9;\\n            transform: scale(1);\\n          }\\n        }\\n      \";\n      style.type = 'text/css';\n      style.id = 'joyride-beacon-animation';\n\n      if (props.nonce !== undefined) {\n        style.setAttribute('nonce', props.nonce);\n      }\n\n      style.appendChild(document.createTextNode(css));\n      head.appendChild(style);\n    }\n\n    return _this;\n  }\n\n  _createClass(JoyrideBeacon, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var shouldFocus = this.props.shouldFocus;\n\n      setTimeout(function () {\n        if (src_default.domElement(_this2.beacon) && shouldFocus) {\n          _this2.beacon.focus();\n        }\n      }, 0);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var style = document.getElementById('joyride-beacon-animation');\n\n      if (style) {\n        style.parentNode.removeChild(style);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          beaconComponent = _this$props.beaconComponent,\n          locale = _this$props.locale,\n          onClickOrHover = _this$props.onClickOrHover,\n          styles = _this$props.styles;\n      var props = {\n        'aria-label': locale.open,\n        onClick: onClickOrHover,\n        onMouseEnter: onClickOrHover,\n        ref: this.setBeaconRef,\n        title: locale.open\n      };\n      var component;\n\n      if (beaconComponent) {\n        var BeaconComponent = beaconComponent;\n        component = /*#__PURE__*/react.createElement(BeaconComponent, props);\n      } else {\n        component = /*#__PURE__*/react.createElement(\"button\", _extends({\n          key: \"JoyrideBeacon\",\n          className: \"react-joyride__beacon\",\n          style: styles.beacon,\n          type: \"button\"\n        }, props), /*#__PURE__*/react.createElement(\"span\", {\n          style: styles.beaconInner\n        }), /*#__PURE__*/react.createElement(\"span\", {\n          style: styles.beaconOuter\n        }));\n      }\n\n      return component;\n    }\n  }]);\n\n  return JoyrideBeacon;\n}(react.Component);\n\nfunction JoyrideSpotlight(_ref) {\n  var styles = _ref.styles;\n  return /*#__PURE__*/react.createElement(\"div\", {\n    key: \"JoyrideSpotlight\",\n    className: \"react-joyride__spotlight\",\n    style: styles\n  });\n}\n\nvar _excluded$2 = [\"mixBlendMode\", \"zIndex\"];\n\nvar JoyrideOverlay = /*#__PURE__*/function (_React$Component) {\n  _inherits(JoyrideOverlay, _React$Component);\n\n  var _super = _createSuper(JoyrideOverlay);\n\n  function JoyrideOverlay() {\n    var _this;\n\n    _classCallCheck(this, JoyrideOverlay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      mouseOverSpotlight: false,\n      isScrolling: false,\n      showSpotlight: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseMove\", function (e) {\n      var mouseOverSpotlight = _this.state.mouseOverSpotlight;\n      var _this$spotlightStyles = _this.spotlightStyles,\n          height = _this$spotlightStyles.height,\n          left = _this$spotlightStyles.left,\n          position = _this$spotlightStyles.position,\n          top = _this$spotlightStyles.top,\n          width = _this$spotlightStyles.width;\n      var offsetY = position === 'fixed' ? e.clientY : e.pageY;\n      var offsetX = position === 'fixed' ? e.clientX : e.pageX;\n      var inSpotlightHeight = offsetY >= top && offsetY <= top + height;\n      var inSpotlightWidth = offsetX >= left && offsetX <= left + width;\n      var inSpotlight = inSpotlightWidth && inSpotlightHeight;\n\n      if (inSpotlight !== mouseOverSpotlight) {\n        _this.updateState({\n          mouseOverSpotlight: inSpotlight\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScroll\", function () {\n      var target = _this.props.target;\n      var element = getElement(target);\n\n      if (_this.scrollParent !== document) {\n        var isScrolling = _this.state.isScrolling;\n\n        if (!isScrolling) {\n          _this.updateState({\n            isScrolling: true,\n            showSpotlight: false\n          });\n        }\n\n        clearTimeout(_this.scrollTimeout);\n        _this.scrollTimeout = setTimeout(function () {\n          _this.updateState({\n            isScrolling: false,\n            showSpotlight: true\n          });\n        }, 50);\n      } else if (hasPosition(element, 'sticky')) {\n        _this.updateState({});\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleResize\", function () {\n      clearTimeout(_this.resizeTimeout);\n      _this.resizeTimeout = setTimeout(function () {\n        if (!_this._isMounted) {\n          return;\n        }\n\n        _this.forceUpdate();\n      }, 100);\n    });\n\n    return _this;\n  }\n\n  _createClass(JoyrideOverlay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props;\n          _this$props.debug;\n          _this$props.disableScrolling;\n          var disableScrollParentFix = _this$props.disableScrollParentFix,\n          target = _this$props.target;\n      var element = getElement(target);\n      this.scrollParent = getScrollParent(element, disableScrollParentFix, true);\n      this._isMounted = true;\n\n      window.addEventListener('resize', this.handleResize);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          lifecycle = _this$props2.lifecycle,\n          spotlightClicks = _this$props2.spotlightClicks;\n\n      var _treeChanges = (0,esm/* default */.Z)(prevProps, this.props),\n          changed = _treeChanges.changed;\n      /* istanbul ignore else */\n\n\n      if (changed('lifecycle', LIFECYCLE.TOOLTIP)) {\n        this.scrollParent.addEventListener('scroll', this.handleScroll, {\n          passive: true\n        });\n        setTimeout(function () {\n          var isScrolling = _this2.state.isScrolling;\n\n          if (!isScrolling) {\n            _this2.updateState({\n              showSpotlight: true\n            });\n          }\n        }, 100);\n      }\n\n      if (changed('spotlightClicks') || changed('disableOverlay') || changed('lifecycle')) {\n        if (spotlightClicks && lifecycle === LIFECYCLE.TOOLTIP) {\n          window.addEventListener('mousemove', this.handleMouseMove, false);\n        } else if (lifecycle !== LIFECYCLE.TOOLTIP) {\n          window.removeEventListener('mousemove', this.handleMouseMove);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      window.removeEventListener('mousemove', this.handleMouseMove);\n      window.removeEventListener('resize', this.handleResize);\n      clearTimeout(this.resizeTimeout);\n      clearTimeout(this.scrollTimeout);\n      this.scrollParent.removeEventListener('scroll', this.handleScroll);\n    }\n  }, {\n    key: \"spotlightStyles\",\n    get: function get() {\n      var showSpotlight = this.state.showSpotlight;\n      var _this$props3 = this.props,\n          disableScrollParentFix = _this$props3.disableScrollParentFix,\n          spotlightClicks = _this$props3.spotlightClicks,\n          spotlightPadding = _this$props3.spotlightPadding,\n          styles = _this$props3.styles,\n          target = _this$props3.target;\n      var element = getElement(target);\n      var elementRect = getClientRect(element);\n      var isFixedTarget = hasPosition(element);\n      var top = getElementPosition(element, spotlightPadding, disableScrollParentFix);\n      return _objectSpread2(_objectSpread2({}, isLegacy() ? styles.spotlightLegacy : styles.spotlight), {}, {\n        height: Math.round(elementRect.height + spotlightPadding * 2),\n        left: Math.round(elementRect.left - spotlightPadding),\n        opacity: showSpotlight ? 1 : 0,\n        pointerEvents: spotlightClicks ? 'none' : 'auto',\n        position: isFixedTarget ? 'fixed' : 'absolute',\n        top: top,\n        transition: 'opacity 0.2s',\n        width: Math.round(elementRect.width + spotlightPadding * 2)\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(state) {\n      if (!this._isMounted) {\n        return;\n      }\n\n      this.setState(state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          mouseOverSpotlight = _this$state.mouseOverSpotlight,\n          showSpotlight = _this$state.showSpotlight;\n      var _this$props4 = this.props,\n          disableOverlay = _this$props4.disableOverlay,\n          disableOverlayClose = _this$props4.disableOverlayClose,\n          lifecycle = _this$props4.lifecycle,\n          onClickOverlay = _this$props4.onClickOverlay,\n          placement = _this$props4.placement,\n          styles = _this$props4.styles;\n\n      if (disableOverlay || lifecycle !== LIFECYCLE.TOOLTIP) {\n        return null;\n      }\n\n      var baseStyles = styles.overlay;\n      /* istanbul ignore else */\n\n      if (isLegacy()) {\n        baseStyles = placement === 'center' ? styles.overlayLegacyCenter : styles.overlayLegacy;\n      }\n\n      var stylesOverlay = _objectSpread2({\n        cursor: disableOverlayClose ? 'default' : 'pointer',\n        height: getDocumentHeight(),\n        pointerEvents: mouseOverSpotlight ? 'none' : 'auto'\n      }, baseStyles);\n\n      var spotlight = placement !== 'center' && showSpotlight && /*#__PURE__*/react.createElement(JoyrideSpotlight, {\n        styles: this.spotlightStyles\n      }); // Hack for Safari bug with mix-blend-mode with z-index\n\n      if (getBrowser() === 'safari') {\n        stylesOverlay.mixBlendMode;\n            stylesOverlay.zIndex;\n            var safarOverlay = _objectWithoutProperties(stylesOverlay, _excluded$2);\n\n        spotlight = /*#__PURE__*/react.createElement(\"div\", {\n          style: _objectSpread2({}, safarOverlay)\n        }, spotlight);\n        delete stylesOverlay.backgroundColor;\n      }\n\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"react-joyride__overlay\",\n        style: stylesOverlay,\n        onClick: onClickOverlay\n      }, spotlight);\n    }\n  }]);\n\n  return JoyrideOverlay;\n}(react.Component);\n\nvar _excluded$1 = [\"styles\"],\n    _excluded2 = [\"color\", \"height\", \"width\"];\n\nfunction JoyrideTooltipCloseBtn(_ref) {\n  var styles = _ref.styles,\n      props = _objectWithoutProperties(_ref, _excluded$1);\n\n  var color = styles.color,\n      height = styles.height,\n      width = styles.width,\n      style = _objectWithoutProperties(styles, _excluded2);\n\n  return /*#__PURE__*/react.createElement(\"button\", _extends({\n    style: style,\n    type: \"button\"\n  }, props), /*#__PURE__*/react.createElement(\"svg\", {\n    width: typeof width === 'number' ? \"\".concat(width, \"px\") : width,\n    height: typeof height === 'number' ? \"\".concat(height, \"px\") : height,\n    viewBox: \"0 0 18 18\",\n    version: \"1.1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    preserveAspectRatio: \"xMidYMid\"\n  }, /*#__PURE__*/react.createElement(\"g\", null, /*#__PURE__*/react.createElement(\"path\", {\n    d: \"M8.13911129,9.00268191 L0.171521827,17.0258467 C-0.0498027049,17.248715 -0.0498027049,17.6098394 0.171521827,17.8327545 C0.28204354,17.9443526 0.427188206,17.9998706 0.572051765,17.9998706 C0.71714958,17.9998706 0.862013139,17.9443526 0.972581703,17.8327545 L9.0000937,9.74924618 L17.0276057,17.8327545 C17.1384085,17.9443526 17.2832721,17.9998706 17.4281356,17.9998706 C17.5729992,17.9998706 17.718097,17.9443526 17.8286656,17.8327545 C18.0499901,17.6098862 18.0499901,17.2487618 17.8286656,17.0258467 L9.86135722,9.00268191 L17.8340066,0.973848225 C18.0553311,0.750979934 18.0553311,0.389855532 17.8340066,0.16694039 C17.6126821,-0.0556467968 17.254037,-0.0556467968 17.0329467,0.16694039 L9.00042166,8.25611765 L0.967006424,0.167268345 C0.745681892,-0.0553188426 0.387317931,-0.0553188426 0.165993399,0.167268345 C-0.0553311331,0.390136635 -0.0553311331,0.751261038 0.165993399,0.974176179 L8.13920499,9.00268191 L8.13911129,9.00268191 Z\",\n    fill: color\n  }))));\n}\n\nvar JoyrideTooltipContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(JoyrideTooltipContainer, _React$Component);\n\n  var _super = _createSuper(JoyrideTooltipContainer);\n\n  function JoyrideTooltipContainer() {\n    _classCallCheck(this, JoyrideTooltipContainer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(JoyrideTooltipContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          backProps = _this$props.backProps,\n          closeProps = _this$props.closeProps,\n          continuous = _this$props.continuous,\n          index = _this$props.index,\n          isLastStep = _this$props.isLastStep,\n          primaryProps = _this$props.primaryProps,\n          size = _this$props.size,\n          skipProps = _this$props.skipProps,\n          step = _this$props.step,\n          tooltipProps = _this$props.tooltipProps;\n      var content = step.content,\n          hideBackButton = step.hideBackButton,\n          hideCloseButton = step.hideCloseButton,\n          hideFooter = step.hideFooter,\n          showProgress = step.showProgress,\n          showSkipButton = step.showSkipButton,\n          title = step.title,\n          styles = step.styles;\n      var _step$locale = step.locale,\n          back = _step$locale.back,\n          close = _step$locale.close,\n          last = _step$locale.last,\n          next = _step$locale.next,\n          skip = _step$locale.skip;\n      var output = {\n        primary: close\n      };\n\n      if (continuous) {\n        output.primary = isLastStep ? last : next;\n\n        if (showProgress) {\n          output.primary = /*#__PURE__*/react.createElement(\"span\", null, output.primary, \" (\", index + 1, \"/\", size, \")\");\n        }\n      }\n\n      if (showSkipButton && !isLastStep) {\n        output.skip = /*#__PURE__*/react.createElement(\"button\", _extends({\n          style: styles.buttonSkip,\n          type: \"button\",\n          \"aria-live\": \"off\"\n        }, skipProps), skip);\n      }\n\n      if (!hideBackButton && index > 0) {\n        output.back = /*#__PURE__*/react.createElement(\"button\", _extends({\n          style: styles.buttonBack,\n          type: \"button\"\n        }, backProps), back);\n      }\n\n      output.close = !hideCloseButton && /*#__PURE__*/react.createElement(JoyrideTooltipCloseBtn, _extends({\n        styles: styles.buttonClose\n      }, closeProps));\n      return /*#__PURE__*/react.createElement(\"div\", _extends({\n        key: \"JoyrideTooltip\",\n        className: \"react-joyride__tooltip\",\n        style: styles.tooltip\n      }, tooltipProps), /*#__PURE__*/react.createElement(\"div\", {\n        style: styles.tooltipContainer\n      }, title && /*#__PURE__*/react.createElement(\"h4\", {\n        style: styles.tooltipTitle,\n        \"aria-label\": title\n      }, title), /*#__PURE__*/react.createElement(\"div\", {\n        style: styles.tooltipContent\n      }, content)), !hideFooter && /*#__PURE__*/react.createElement(\"div\", {\n        style: styles.tooltipFooter\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        style: styles.tooltipFooterSpacer\n      }, output.skip), output.back, /*#__PURE__*/react.createElement(\"button\", _extends({\n        style: styles.buttonNext,\n        type: \"button\"\n      }, primaryProps), output.primary)), output.close);\n    }\n  }]);\n\n  return JoyrideTooltipContainer;\n}(react.Component);\n\nvar _excluded = [\"beaconComponent\", \"tooltipComponent\"];\n\nvar JoyrideTooltip = /*#__PURE__*/function (_React$Component) {\n  _inherits(JoyrideTooltip, _React$Component);\n\n  var _super = _createSuper(JoyrideTooltip);\n\n  function JoyrideTooltip() {\n    var _this;\n\n    _classCallCheck(this, JoyrideTooltip);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickBack\", function (e) {\n      e.preventDefault();\n      var helpers = _this.props.helpers;\n      helpers.prev();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickClose\", function (e) {\n      e.preventDefault();\n      var helpers = _this.props.helpers;\n      helpers.close();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickPrimary\", function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n          continuous = _this$props.continuous,\n          helpers = _this$props.helpers;\n\n      if (!continuous) {\n        helpers.close();\n        return;\n      }\n\n      helpers.next();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickSkip\", function (e) {\n      e.preventDefault();\n      var helpers = _this.props.helpers;\n      helpers.skip();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getElementsProps\", function () {\n      var _this$props2 = _this.props,\n          continuous = _this$props2.continuous,\n          isLastStep = _this$props2.isLastStep,\n          setTooltipRef = _this$props2.setTooltipRef,\n          step = _this$props2.step;\n      var back = getText(step.locale.back);\n      var close = getText(step.locale.close);\n      var last = getText(step.locale.last);\n      var next = getText(step.locale.next);\n      var skip = getText(step.locale.skip);\n      var primaryText = continuous ? next : close;\n\n      if (isLastStep) {\n        primaryText = last;\n      }\n\n      return {\n        backProps: {\n          'aria-label': back,\n          'data-action': 'back',\n          onClick: _this.handleClickBack,\n          role: 'button',\n          title: back\n        },\n        closeProps: {\n          'aria-label': close,\n          'data-action': 'close',\n          onClick: _this.handleClickClose,\n          role: 'button',\n          title: close\n        },\n        primaryProps: {\n          'aria-label': primaryText,\n          'data-action': 'primary',\n          onClick: _this.handleClickPrimary,\n          role: 'button',\n          title: primaryText\n        },\n        skipProps: {\n          'aria-label': skip,\n          'data-action': 'skip',\n          onClick: _this.handleClickSkip,\n          role: 'button',\n          title: skip\n        },\n        tooltipProps: {\n          'aria-modal': true,\n          ref: setTooltipRef,\n          role: 'alertdialog'\n        }\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(JoyrideTooltip, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          continuous = _this$props3.continuous,\n          index = _this$props3.index,\n          isLastStep = _this$props3.isLastStep,\n          size = _this$props3.size,\n          step = _this$props3.step;\n\n      step.beaconComponent;\n          var tooltipComponent = step.tooltipComponent,\n          cleanStep = _objectWithoutProperties(step, _excluded);\n\n      var component;\n\n      if (tooltipComponent) {\n        var renderProps = _objectSpread2(_objectSpread2({}, this.getElementsProps()), {}, {\n          continuous: continuous,\n          index: index,\n          isLastStep: isLastStep,\n          size: size,\n          step: cleanStep\n        });\n\n        var TooltipComponent = tooltipComponent;\n        component = /*#__PURE__*/react.createElement(TooltipComponent, renderProps);\n      } else {\n        component = /*#__PURE__*/react.createElement(JoyrideTooltipContainer, _extends({}, this.getElementsProps(), {\n          continuous: continuous,\n          index: index,\n          isLastStep: isLastStep,\n          size: size,\n          step: step\n        }));\n      }\n\n      return component;\n    }\n  }]);\n\n  return JoyrideTooltip;\n}(react.Component);\n\nvar JoyridePortal = /*#__PURE__*/function (_React$Component) {\n  _inherits(JoyridePortal, _React$Component);\n\n  var _super = _createSuper(JoyridePortal);\n\n  function JoyridePortal() {\n    _classCallCheck(this, JoyridePortal);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(JoyridePortal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!canUseDOM) return;\n\n      if (!isReact16) {\n        this.renderReact15();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (!canUseDOM) return;\n\n      if (!isReact16) {\n        this.renderReact15();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (!canUseDOM || !this.node) return;\n\n      if (!isReact16) {\n        react_dom.unmountComponentAtNode(this.node);\n      }\n\n      if (this.node.parentNode === document.body) {\n        document.body.removeChild(this.node);\n        this.node = undefined;\n      }\n    }\n  }, {\n    key: \"appendNode\",\n    value: function appendNode() {\n      var id = this.props.id;\n\n      if (!this.node) {\n        this.node = document.createElement('div');\n        /* istanbul ignore else */\n\n        if (id) {\n          this.node.id = id;\n        }\n\n        document.body.appendChild(this.node);\n      }\n    }\n  }, {\n    key: \"renderReact15\",\n    value: function renderReact15() {\n      if (!canUseDOM) return null;\n      var children = this.props.children;\n\n      if (!this.node) {\n        this.appendNode();\n      }\n\n      react_dom.unstable_renderSubtreeIntoContainer(this, children, this.node);\n      return null;\n    }\n  }, {\n    key: \"renderReact16\",\n    value: function renderReact16() {\n      if (!canUseDOM || !isReact16) return null;\n      var children = this.props.children;\n\n      if (!this.node) {\n        this.appendNode();\n      }\n\n      return /*#__PURE__*/react_dom.createPortal(children, this.node);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!isReact16) {\n        return null;\n      }\n\n      return this.renderReact16();\n    }\n  }]);\n\n  return JoyridePortal;\n}(react.Component);\n\nvar JoyrideStep = /*#__PURE__*/function (_React$Component) {\n  _inherits(JoyrideStep, _React$Component);\n\n  var _super = _createSuper(JoyrideStep);\n\n  function JoyrideStep() {\n    var _this;\n\n    _classCallCheck(this, JoyrideStep);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"scope\", {\n      removeScope: function removeScope() {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickHoverBeacon\", function (e) {\n      var _this$props = _this.props,\n          step = _this$props.step,\n          update = _this$props.update;\n\n      if (e.type === 'mouseenter' && step.event !== 'hover') {\n        return;\n      }\n\n      update({\n        lifecycle: LIFECYCLE.TOOLTIP\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickOverlay\", function () {\n      var _this$props2 = _this.props,\n          helpers = _this$props2.helpers,\n          step = _this$props2.step;\n\n      if (!step.disableOverlayClose) {\n        helpers.close();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setTooltipRef\", function (c) {\n      _this.tooltip = c;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setPopper\", function (popper, type) {\n      var _this$props3 = _this.props,\n          action = _this$props3.action,\n          setPopper = _this$props3.setPopper,\n          update = _this$props3.update;\n\n      if (type === 'wrapper') {\n        _this.beaconPopper = popper;\n      } else {\n        _this.tooltipPopper = popper;\n      }\n\n      setPopper(popper, type);\n\n      if (_this.beaconPopper && _this.tooltipPopper) {\n        update({\n          action: action === ACTIONS.CLOSE ? ACTIONS.CLOSE : action,\n          lifecycle: LIFECYCLE.READY\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(JoyrideStep, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          debug = _this$props4.debug,\n          index = _this$props4.index;\n      log({\n        title: \"step:\".concat(index),\n        data: [{\n          key: 'props',\n          value: this.props\n        }],\n        debug: debug\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props5 = this.props,\n          action = _this$props5.action,\n          callback = _this$props5.callback,\n          continuous = _this$props5.continuous,\n          controlled = _this$props5.controlled,\n          debug = _this$props5.debug,\n          index = _this$props5.index,\n          lifecycle = _this$props5.lifecycle,\n          size = _this$props5.size,\n          status = _this$props5.status,\n          step = _this$props5.step,\n          update = _this$props5.update;\n\n      var _treeChanges = (0,esm/* default */.Z)(prevProps, this.props),\n          changed = _treeChanges.changed,\n          changedFrom = _treeChanges.changedFrom;\n\n      var state = {\n        action: action,\n        controlled: controlled,\n        index: index,\n        lifecycle: lifecycle,\n        size: size,\n        status: status\n      };\n      var skipBeacon = continuous && action !== ACTIONS.CLOSE && (index > 0 || action === ACTIONS.PREV);\n      var hasStoreChanged = changed('action') || changed('index') || changed('lifecycle') || changed('status');\n      var hasStarted = changedFrom('lifecycle', [LIFECYCLE.TOOLTIP, LIFECYCLE.INIT], LIFECYCLE.INIT);\n      var isAfterAction = changed('action', [ACTIONS.NEXT, ACTIONS.PREV, ACTIONS.SKIP, ACTIONS.CLOSE]);\n\n      if (isAfterAction && (hasStarted || controlled)) {\n        callback(_objectSpread2(_objectSpread2({}, state), {}, {\n          index: prevProps.index,\n          lifecycle: LIFECYCLE.COMPLETE,\n          step: prevProps.step,\n          type: EVENTS.STEP_AFTER\n        }));\n      }\n\n      if (step.placement === 'center' && status === STATUS.RUNNING && changed('index') && action !== ACTIONS.START && lifecycle === LIFECYCLE.INIT) {\n        update({\n          lifecycle: LIFECYCLE.READY\n        });\n      } // There's a step to use, but there's no target in the DOM\n\n\n      if (hasStoreChanged) {\n        var element = getElement(step.target);\n        var elementExists = !!element;\n        var hasRenderedTarget = elementExists && isElementVisible(element);\n\n        if (hasRenderedTarget) {\n          if (changedFrom('status', STATUS.READY, STATUS.RUNNING) || changedFrom('lifecycle', LIFECYCLE.INIT, LIFECYCLE.READY)) {\n            callback(_objectSpread2(_objectSpread2({}, state), {}, {\n              step: step,\n              type: EVENTS.STEP_BEFORE\n            }));\n          }\n        } else {\n          console.warn(elementExists ? 'Target not visible' : 'Target not mounted', step); //eslint-disable-line no-console\n\n          callback(_objectSpread2(_objectSpread2({}, state), {}, {\n            type: EVENTS.TARGET_NOT_FOUND,\n            step: step\n          }));\n\n          if (!controlled) {\n            update({\n              index: index + ([ACTIONS.PREV].indexOf(action) !== -1 ? -1 : 1)\n            });\n          }\n        }\n      }\n\n      if (changedFrom('lifecycle', LIFECYCLE.INIT, LIFECYCLE.READY)) {\n        update({\n          lifecycle: hideBeacon(step) || skipBeacon ? LIFECYCLE.TOOLTIP : LIFECYCLE.BEACON\n        });\n      }\n\n      if (changed('index')) {\n        log({\n          title: \"step:\".concat(lifecycle),\n          data: [{\n            key: 'props',\n            value: this.props\n          }],\n          debug: debug\n        });\n      }\n      /* istanbul ignore else */\n\n\n      if (changed('lifecycle', LIFECYCLE.BEACON)) {\n        callback(_objectSpread2(_objectSpread2({}, state), {}, {\n          step: step,\n          type: EVENTS.BEACON\n        }));\n      }\n\n      if (changed('lifecycle', LIFECYCLE.TOOLTIP)) {\n        callback(_objectSpread2(_objectSpread2({}, state), {}, {\n          step: step,\n          type: EVENTS.TOOLTIP\n        }));\n        this.scope = new Scope(this.tooltip, {\n          selector: '[data-action=primary]'\n        });\n        this.scope.setFocus();\n      }\n\n      if (changedFrom('lifecycle', [LIFECYCLE.TOOLTIP, LIFECYCLE.INIT], LIFECYCLE.INIT)) {\n        this.scope.removeScope();\n        delete this.beaconPopper;\n        delete this.tooltipPopper;\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.scope.removeScope();\n    }\n    /**\n     * Beacon click/hover event listener\n     *\n     * @param {Event} e\n     */\n\n  }, {\n    key: \"open\",\n    get: function get() {\n      var _this$props6 = this.props,\n          step = _this$props6.step,\n          lifecycle = _this$props6.lifecycle;\n      return !!(hideBeacon(step) || lifecycle === LIFECYCLE.TOOLTIP);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n          continuous = _this$props7.continuous,\n          debug = _this$props7.debug,\n          helpers = _this$props7.helpers,\n          index = _this$props7.index,\n          lifecycle = _this$props7.lifecycle,\n          nonce = _this$props7.nonce,\n          shouldScroll = _this$props7.shouldScroll,\n          size = _this$props7.size,\n          step = _this$props7.step;\n      var target = getElement(step.target);\n\n      if (!validateStep(step) || !src_default.domElement(target)) {\n        return null;\n      }\n\n      return /*#__PURE__*/react.createElement(\"div\", {\n        key: \"JoyrideStep-\".concat(index),\n        className: \"react-joyride__step\"\n      }, /*#__PURE__*/react.createElement(JoyridePortal, {\n        id: \"react-joyride-portal\"\n      }, /*#__PURE__*/react.createElement(JoyrideOverlay, _extends({}, step, {\n        debug: debug,\n        lifecycle: lifecycle,\n        onClickOverlay: this.handleClickOverlay\n      }))), /*#__PURE__*/react.createElement(es/* default */.Z, _extends({\n        component: /*#__PURE__*/react.createElement(JoyrideTooltip, {\n          continuous: continuous,\n          helpers: helpers,\n          index: index,\n          isLastStep: index + 1 === size,\n          setTooltipRef: this.setTooltipRef,\n          size: size,\n          step: step\n        }),\n        debug: debug,\n        getPopper: this.setPopper,\n        id: \"react-joyride-step-\".concat(index),\n        isPositioned: step.isFixed || hasPosition(target),\n        open: this.open,\n        placement: step.placement,\n        target: step.target\n      }, step.floaterProps), /*#__PURE__*/react.createElement(JoyrideBeacon, {\n        beaconComponent: step.beaconComponent,\n        locale: step.locale,\n        nonce: nonce,\n        onClickOrHover: this.handleClickHoverBeacon,\n        shouldFocus: shouldScroll,\n        styles: step.styles\n      })));\n    }\n  }]);\n\n  return JoyrideStep;\n}(react.Component);\n\nvar Joyride = /*#__PURE__*/function (_React$Component) {\n  _inherits(Joyride, _React$Component);\n\n  var _super = _createSuper(Joyride);\n\n  function Joyride(props) {\n    var _this;\n\n    _classCallCheck(this, Joyride);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"initStore\", function () {\n      var _this$props = _this.props,\n          debug = _this$props.debug,\n          getHelpers = _this$props.getHelpers,\n          run = _this$props.run,\n          stepIndex = _this$props.stepIndex;\n      _this.store = new createStore(_objectSpread2(_objectSpread2({}, _this.props), {}, {\n        controlled: run && src_default.number(stepIndex)\n      }));\n      _this.helpers = _this.store.getHelpers();\n      var addListener = _this.store.addListener;\n      log({\n        title: 'init',\n        data: [{\n          key: 'props',\n          value: _this.props\n        }, {\n          key: 'state',\n          value: _this.state\n        }],\n        debug: debug\n      }); // Sync the store to this component's state.\n\n      addListener(_this.syncState);\n      getHelpers(_this.helpers);\n      return _this.store.getState();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"callback\", function (data) {\n      var callback = _this.props.callback;\n      /* istanbul ignore else */\n\n      if (src_default[\"function\"](callback)) {\n        callback(data);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyboard\", function (e) {\n      var _this$state = _this.state,\n          index = _this$state.index,\n          lifecycle = _this$state.lifecycle;\n      var steps = _this.props.steps;\n      var step = steps[index];\n      var intKey = window.Event ? e.which : e.keyCode;\n\n      if (lifecycle === LIFECYCLE.TOOLTIP) {\n        if (intKey === 27 && step && !step.disableCloseOnEsc) {\n          _this.store.close();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"syncState\", function (state) {\n      _this.setState(state);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setPopper\", function (popper, type) {\n      if (type === 'wrapper') {\n        _this.beaconPopper = popper;\n      } else {\n        _this.tooltipPopper = popper;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"shouldScroll\", function (disableScrolling, index, scrollToFirstStep, lifecycle, step, target, prevState) {\n      return !disableScrolling && (index !== 0 || scrollToFirstStep || lifecycle === LIFECYCLE.TOOLTIP) && step.placement !== 'center' && (!step.isFixed || !hasPosition(target)) && // fixed steps don't need to scroll\n      prevState.lifecycle !== lifecycle && [LIFECYCLE.BEACON, LIFECYCLE.TOOLTIP].indexOf(lifecycle) !== -1;\n    });\n\n    _this.state = _this.initStore();\n    return _this;\n  }\n\n  _createClass(Joyride, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!canUseDOM) return;\n      var _this$props2 = this.props,\n          disableCloseOnEsc = _this$props2.disableCloseOnEsc,\n          debug = _this$props2.debug,\n          run = _this$props2.run,\n          steps = _this$props2.steps;\n      var start = this.store.start;\n\n      if (validateSteps(steps, debug) && run) {\n        start();\n      }\n      /* istanbul ignore else */\n\n\n      if (!disableCloseOnEsc) {\n        document.body.addEventListener('keydown', this.handleKeyboard, {\n          passive: true\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!canUseDOM) return;\n      var _this$state2 = this.state,\n          action = _this$state2.action,\n          controlled = _this$state2.controlled,\n          index = _this$state2.index,\n          lifecycle = _this$state2.lifecycle,\n          status = _this$state2.status;\n      var _this$props3 = this.props,\n          debug = _this$props3.debug,\n          run = _this$props3.run,\n          stepIndex = _this$props3.stepIndex,\n          steps = _this$props3.steps;\n      var prevSteps = prevProps.steps,\n          prevStepIndex = prevProps.stepIndex;\n      var _this$store = this.store,\n          reset = _this$store.reset,\n          setSteps = _this$store.setSteps,\n          start = _this$store.start,\n          stop = _this$store.stop,\n          update = _this$store.update;\n\n      var _treeChanges = (0,esm/* default */.Z)(prevProps, this.props),\n          changedProps = _treeChanges.changed;\n\n      var _treeChanges2 = (0,esm/* default */.Z)(prevState, this.state),\n          changed = _treeChanges2.changed,\n          changedFrom = _treeChanges2.changedFrom;\n\n      var step = getMergedStep(steps[index], this.props);\n      var stepsChanged = !isEqual(prevSteps, steps);\n      var stepIndexChanged = src_default.number(stepIndex) && changedProps('stepIndex');\n      var target = getElement(step === null || step === void 0 ? void 0 : step.target);\n\n      if (stepsChanged) {\n        if (validateSteps(steps, debug)) {\n          setSteps(steps);\n        } else {\n          console.warn('Steps are not valid', steps); //eslint-disable-line no-console\n        }\n      }\n      /* istanbul ignore else */\n\n\n      if (changedProps('run')) {\n        if (run) {\n          start(stepIndex);\n        } else {\n          stop();\n        }\n      }\n      /* istanbul ignore else */\n\n\n      if (stepIndexChanged) {\n        var nextAction = prevStepIndex < stepIndex ? ACTIONS.NEXT : ACTIONS.PREV;\n\n        if (action === ACTIONS.STOP) {\n          nextAction = ACTIONS.START;\n        }\n\n        if (!([STATUS.FINISHED, STATUS.SKIPPED].indexOf(status) !== -1)) {\n          update({\n            action: action === ACTIONS.CLOSE ? ACTIONS.CLOSE : nextAction,\n            index: stepIndex,\n            lifecycle: LIFECYCLE.INIT\n          });\n        }\n      } // Update the index if the first step is not found\n\n\n      if (!controlled && status === STATUS.RUNNING && index === 0 && !target) {\n        update({\n          index: index + 1\n        });\n        this.callback(_objectSpread2(_objectSpread2({}, this.state), {}, {\n          type: EVENTS.TARGET_NOT_FOUND,\n          step: step\n        }));\n      }\n\n      var callbackData = _objectSpread2(_objectSpread2({}, this.state), {}, {\n        index: index,\n        step: step\n      });\n\n      var isAfterAction = changed('action', [ACTIONS.NEXT, ACTIONS.PREV, ACTIONS.SKIP, ACTIONS.CLOSE]);\n\n      if (isAfterAction && changed('status', STATUS.PAUSED)) {\n        var prevStep = getMergedStep(steps[prevState.index], this.props);\n        this.callback(_objectSpread2(_objectSpread2({}, callbackData), {}, {\n          index: prevState.index,\n          lifecycle: LIFECYCLE.COMPLETE,\n          step: prevStep,\n          type: EVENTS.STEP_AFTER\n        }));\n      }\n\n      if (changed('status', [STATUS.FINISHED, STATUS.SKIPPED])) {\n        var _prevStep = getMergedStep(steps[prevState.index], this.props);\n\n        if (!controlled) {\n          this.callback(_objectSpread2(_objectSpread2({}, callbackData), {}, {\n            index: prevState.index,\n            lifecycle: LIFECYCLE.COMPLETE,\n            step: _prevStep,\n            type: EVENTS.STEP_AFTER\n          }));\n        }\n\n        this.callback(_objectSpread2(_objectSpread2({}, callbackData), {}, {\n          index: prevState.index,\n          // Return the last step when the tour is finished\n          step: _prevStep,\n          type: EVENTS.TOUR_END\n        }));\n        reset();\n      } else if (changedFrom('status', [STATUS.IDLE, STATUS.READY], STATUS.RUNNING)) {\n        this.callback(_objectSpread2(_objectSpread2({}, callbackData), {}, {\n          type: EVENTS.TOUR_START\n        }));\n      } else if (changed('status')) {\n        this.callback(_objectSpread2(_objectSpread2({}, callbackData), {}, {\n          type: EVENTS.TOUR_STATUS\n        }));\n      } else if (changed('action', ACTIONS.RESET)) {\n        this.callback(_objectSpread2(_objectSpread2({}, callbackData), {}, {\n          type: EVENTS.TOUR_STATUS\n        }));\n      }\n\n      if (step) {\n        this.scrollToStep(prevState);\n\n        if (step.placement === 'center' && status === STATUS.RUNNING && action === ACTIONS.START && lifecycle === LIFECYCLE.INIT) {\n          update({\n            lifecycle: LIFECYCLE.READY\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var disableCloseOnEsc = this.props.disableCloseOnEsc;\n      /* istanbul ignore else */\n\n      if (!disableCloseOnEsc) {\n        document.body.removeEventListener('keydown', this.handleKeyboard);\n      }\n    }\n  }, {\n    key: \"scrollToStep\",\n    value: function scrollToStep(prevState) {\n      var _this$state3 = this.state,\n          index = _this$state3.index,\n          lifecycle = _this$state3.lifecycle,\n          status = _this$state3.status;\n      var _this$props4 = this.props,\n          debug = _this$props4.debug,\n          disableScrolling = _this$props4.disableScrolling,\n          disableScrollParentFix = _this$props4.disableScrollParentFix,\n          scrollToFirstStep = _this$props4.scrollToFirstStep,\n          scrollOffset = _this$props4.scrollOffset,\n          scrollDuration = _this$props4.scrollDuration,\n          steps = _this$props4.steps;\n      var step = getMergedStep(steps[index], this.props);\n      /* istanbul ignore else */\n\n      if (step) {\n        var target = getElement(step.target);\n        var shouldScroll = this.shouldScroll(disableScrolling, index, scrollToFirstStep, lifecycle, step, target, prevState);\n\n        if (status === STATUS.RUNNING && shouldScroll) {\n          var hasCustomScroll = hasCustomScrollParent(target, disableScrollParentFix);\n          var scrollParent = getScrollParent(target, disableScrollParentFix);\n          var scrollY = Math.floor(getScrollTo(target, scrollOffset, disableScrollParentFix)) || 0;\n          log({\n            title: 'scrollToStep',\n            data: [{\n              key: 'index',\n              value: index\n            }, {\n              key: 'lifecycle',\n              value: lifecycle\n            }, {\n              key: 'status',\n              value: status\n            }],\n            debug: debug\n          });\n          /* istanbul ignore else */\n\n          if (lifecycle === LIFECYCLE.BEACON && this.beaconPopper) {\n            var _this$beaconPopper = this.beaconPopper,\n                placement = _this$beaconPopper.placement,\n                popper = _this$beaconPopper.popper;\n            /* istanbul ignore else */\n\n            if (!(['bottom'].indexOf(placement) !== -1) && !hasCustomScroll) {\n              scrollY = Math.floor(popper.top - scrollOffset);\n            }\n          } else if (lifecycle === LIFECYCLE.TOOLTIP && this.tooltipPopper) {\n            var _this$tooltipPopper = this.tooltipPopper,\n                flipped = _this$tooltipPopper.flipped,\n                _placement = _this$tooltipPopper.placement,\n                _popper = _this$tooltipPopper.popper;\n\n            if (['top', 'right', 'left'].indexOf(_placement) !== -1 && !flipped && !hasCustomScroll) {\n              scrollY = Math.floor(_popper.top - scrollOffset);\n            } else {\n              scrollY -= step.spotlightPadding;\n            }\n          }\n\n          scrollY = scrollY >= 0 ? scrollY : 0;\n          /* istanbul ignore else */\n\n          if (status === STATUS.RUNNING) {\n            scrollTo(scrollY, scrollParent, scrollDuration);\n          }\n        }\n      }\n    }\n    /**\n     * Trigger the callback.\n     *\n     * @private\n     * @param {Object} data\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!canUseDOM) return null;\n      var _this$state4 = this.state,\n          index = _this$state4.index,\n          status = _this$state4.status;\n      var _this$props5 = this.props,\n          continuous = _this$props5.continuous,\n          debug = _this$props5.debug,\n          nonce = _this$props5.nonce,\n          scrollToFirstStep = _this$props5.scrollToFirstStep,\n          steps = _this$props5.steps;\n      var step = getMergedStep(steps[index], this.props);\n      var output;\n\n      if (status === STATUS.RUNNING && step) {\n        output = /*#__PURE__*/react.createElement(JoyrideStep, _extends({}, this.state, {\n          callback: this.callback,\n          continuous: continuous,\n          debug: debug,\n          setPopper: this.setPopper,\n          helpers: this.helpers,\n          nonce: nonce,\n          shouldScroll: !step.disableScrolling && (index !== 0 || scrollToFirstStep),\n          step: step,\n          update: this.store.update\n        }));\n      }\n\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"react-joyride\"\n      }, output);\n    }\n  }]);\n\n  return Joyride;\n}(react.Component);\n\n_defineProperty(Joyride, \"defaultProps\", {\n  continuous: false,\n  debug: false,\n  disableCloseOnEsc: false,\n  disableOverlay: false,\n  disableOverlayClose: false,\n  disableScrolling: false,\n  disableScrollParentFix: false,\n  getHelpers: function getHelpers() {},\n  hideBackButton: false,\n  run: true,\n  scrollOffset: 20,\n  scrollDuration: 300,\n  scrollToFirstStep: false,\n  showSkipButton: false,\n  showProgress: false,\n  spotlightClicks: false,\n  spotlightPadding: 10,\n  steps: []\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///50408\n")}}]);