"use strict";(self.webpackChunkcryostat_web=self.webpackChunkcryostat_web||[]).push([[4634],{22528:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": () => (/* binding */ victory_polar_axis)\n});\n\n// EXTERNAL MODULE: ./node_modules/lodash/isEmpty.js\nvar isEmpty = __webpack_require__(41609);\nvar isEmpty_default = /*#__PURE__*/__webpack_require__.n(isEmpty);\n// EXTERNAL MODULE: ./node_modules/lodash/assign.js\nvar lodash_assign = __webpack_require__(28583);\nvar assign_default = /*#__PURE__*/__webpack_require__.n(lodash_assign);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(45697);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/axis.js\nvar victory_util_axis = __webpack_require__(92555);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/common-props.js\nvar common_props = __webpack_require__(5734);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/prop-types.js\nvar victory_util_prop_types = __webpack_require__(99733);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-primitives/line-segment.js + 1 modules\nvar line_segment = __webpack_require__(85287);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-label/victory-label.js + 2 modules\nvar victory_label = __webpack_require__(41248);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-primitives/arc.js\nvar arc = __webpack_require__(56733);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-container/victory-container.js + 1 modules\nvar victory_container = __webpack_require__(3532);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-theme/victory-theme.js + 2 modules\nvar victory_theme = __webpack_require__(6673);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/add-events.js + 3 modules\nvar add_events = __webpack_require__(73247);\n// EXTERNAL MODULE: ./node_modules/lodash/defaults.js\nvar defaults = __webpack_require__(91747);\nvar defaults_default = /*#__PURE__*/__webpack_require__.n(defaults);\n// EXTERNAL MODULE: ./node_modules/lodash/uniqBy.js\nvar uniqBy = __webpack_require__(45578);\nvar uniqBy_default = /*#__PURE__*/__webpack_require__.n(uniqBy);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/helpers.js\nvar helpers = __webpack_require__(95302);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/scale.js\nvar victory_util_scale = __webpack_require__(74765);\n// EXTERNAL MODULE: ./node_modules/victory-core/es/victory-util/label-helpers.js\nvar label_helpers = __webpack_require__(46144);\n;// CONCATENATED MODULE: ./node_modules/victory-polar-axis/es/helper-methods.js\n\n\n\n\n\nvar getPosition = function (r, angle, axis) {\n  return axis === "x" ? r * Math.cos(angle) : -r * Math.sin(angle);\n};\n\nvar getAxisType = function (props) {\n  var typicalType = props.dependentAxis ? "radial" : "angular";\n  var invertedType = typicalType === "angular" ? "radial" : "angular";\n  return props.horizontal ? invertedType : typicalType;\n};\n\nvar filterTicks = function (ticks, scale) {\n  var compareTicks = function (t) {\n    return scale(t) % (2 * Math.PI);\n  };\n\n  return uniqBy_default()(ticks, compareTicks);\n};\n\nvar getEvaluatedStyles = function (style, props) {\n  return {\n    tickStyle: helpers/* evaluateStyle */.F3(style.ticks, props),\n    labelStyle: helpers/* evaluateStyle */.F3(style.tickLabels, props),\n    gridStyle: helpers/* evaluateStyle */.F3(style.grid, props)\n  };\n};\n\nvar getStyleObject = function (props) {\n  var _props$theme = props.theme,\n      theme = _props$theme === void 0 ? {} : _props$theme,\n      dependentAxis = props.dependentAxis;\n  var generalAxisStyle = theme.polarAxis && theme.polarAxis.style || theme.axis && theme.axis.style;\n  var polarAxisType = dependentAxis ? "polarDependentAxis" : "polarIndependentAxis";\n  var standardAxisType = dependentAxis ? "dependentAxis" : "independentAxis";\n  var specificAxisStyle = theme[polarAxisType] && theme[polarAxisType].style || theme[standardAxisType] && theme[standardAxisType].style;\n\n  var mergeStyles = function () {\n    var styleNamespaces = ["axis", "axisLabel", "grid", "parent", "tickLabels", "ticks"];\n    return styleNamespaces.reduce(function (memo, curr) {\n      memo[curr] = defaults_default()({}, specificAxisStyle[curr], generalAxisStyle[curr]);\n      return memo;\n    }, {});\n  };\n\n  return generalAxisStyle && specificAxisStyle ? mergeStyles() : specificAxisStyle || generalAxisStyle;\n};\n\nvar getRadius = function (props) {\n  var _Helpers$getPadding = helpers/* getPadding */.tQ(props),\n      left = _Helpers$getPadding.left,\n      right = _Helpers$getPadding.right,\n      top = _Helpers$getPadding.top,\n      bottom = _Helpers$getPadding.bottom;\n\n  var width = props.width,\n      height = props.height;\n  return Math.min(width - left - right, height - top - bottom) / 2;\n};\n\nvar getRange = function (props, axis) {\n  // Return the range from props if one is given.\n  if (props.range && props.range[axis]) {\n    return props.range[axis];\n  } else if (props.range && Array.isArray(props.range)) {\n    return props.range;\n  }\n\n  var axisType = getAxisType(props);\n\n  if (axisType === "angular") {\n    var startAngle = helpers/* degreesToRadians */.Ht(props.startAngle);\n    var endAngle = helpers/* degreesToRadians */.Ht(props.endAngle);\n    return [startAngle, endAngle];\n  }\n\n  var radius = getRadius(props);\n  return [props.innerRadius || 0, radius];\n}; // exposed for use by VictoryChart (necessary?)\n\n\nvar getScale = function (props) {\n  var axis = victory_util_axis/* getAxis */.dd(props);\n  var scale = victory_util_scale/* getBaseScale */.q8(props, axis);\n  var domain = victory_util_axis/* getDomain */.ge(props, axis) || scale.domain();\n  var range = getRange(props, axis);\n  scale.range(range);\n  scale.domain(domain);\n  return scale;\n};\nvar getStyles = function (props, styleObject) {\n  if (props.disableInlineStyles) {\n    return {};\n  }\n\n  var style = props.style || {};\n  styleObject = styleObject || {};\n  var parentStyleProps = {\n    height: "auto",\n    width: "100%"\n  };\n  return {\n    parent: defaults_default()(parentStyleProps, style.parent, styleObject.parent),\n    axis: defaults_default()({}, style.axis, styleObject.axis),\n    axisLabel: defaults_default()({}, style.axisLabel, styleObject.axisLabel),\n    grid: defaults_default()({}, style.grid, styleObject.grid),\n    ticks: defaults_default()({}, style.ticks, styleObject.ticks),\n    tickLabels: defaults_default()({}, style.tickLabels, styleObject.tickLabels)\n  };\n};\n\nvar getAxisAngle = function (props) {\n  var axisAngle = props.axisAngle,\n      startAngle = props.startAngle,\n      dependentAxis = props.dependentAxis;\n  var axis = victory_util_axis/* getAxis */.dd(props);\n  var axisValue = victory_util_axis/* getAxisValue */.w5(props, axis);\n\n  if (axisValue === undefined || !dependentAxis) {\n    return axisAngle === undefined ? startAngle : axisAngle;\n  }\n\n  return helpers/* radiansToDegrees */.vi(axisValue);\n}; // eslint-disable-next-line max-params\n\n\nvar getTickProps = function (props, calculatedValues, tickValue, index) {\n  var axisType = calculatedValues.axisType,\n      radius = calculatedValues.radius,\n      scale = calculatedValues.scale,\n      style = calculatedValues.style,\n      stringTicks = calculatedValues.stringTicks,\n      ticks = calculatedValues.ticks,\n      tickFormat = calculatedValues.tickFormat,\n      origin = calculatedValues.origin;\n  var text = tickFormat(tickValue, index, ticks);\n  var tick = stringTicks ? stringTicks[index] : tickValue;\n\n  var _getEvaluatedStyles = getEvaluatedStyles(style, {\n    tick: tick,\n    tickValue: tickValue,\n    index: index,\n    ticks: ticks,\n    stringTicks: stringTicks,\n    radius: radius,\n    scale: scale,\n    axisType: axisType,\n    text: text\n  }),\n      tickStyle = _getEvaluatedStyles.tickStyle;\n\n  var axisAngle = axisType === "radial" ? getAxisAngle(props, scale) : undefined;\n  var tickPadding = tickStyle.padding || tickStyle.size || 0;\n  var padAngle = helpers/* degreesToRadians */.Ht(90 - axisAngle);\n  var tickAngle = axisType === "angular" ? scale(tickValue) : helpers/* degreesToRadians */.Ht(-1 * axisAngle);\n  var tickRadius = axisType === "angular" ? radius : scale(tickValue);\n  return axisType === "angular" ? {\n    index: index,\n    datum: tick,\n    style: tickStyle,\n    x1: getPosition(tickRadius, tickAngle, "x") + origin.x,\n    y1: getPosition(tickRadius, tickAngle, "y") + origin.y,\n    x2: getPosition(tickRadius + tickPadding, tickAngle, "x") + origin.x,\n    y2: getPosition(tickRadius + tickPadding, tickAngle, "y") + origin.y\n  } : {\n    index: index,\n    datum: tick,\n    style: tickStyle,\n    x1: tickRadius * Math.cos(tickAngle) + Math.cos(padAngle) * tickPadding + origin.x,\n    x2: tickRadius * Math.cos(tickAngle) - Math.cos(padAngle) * tickPadding + origin.x,\n    y1: tickRadius * Math.sin(tickAngle) + Math.sin(padAngle) * tickPadding + origin.y,\n    y2: tickRadius * Math.sin(tickAngle) - Math.sin(padAngle) * tickPadding + origin.y\n  };\n}; // eslint-disable-next-line max-params\n\n\nvar getTickLabelProps = function (props, calculatedValues, tickValue, index) {\n  var axisType = calculatedValues.axisType,\n      radius = calculatedValues.radius,\n      tickFormat = calculatedValues.tickFormat,\n      style = calculatedValues.style,\n      scale = calculatedValues.scale,\n      ticks = calculatedValues.ticks,\n      stringTicks = calculatedValues.stringTicks,\n      origin = calculatedValues.origin;\n  var text = tickFormat(tickValue, index, ticks);\n  var tick = stringTicks ? stringTicks[index] : tickValue;\n\n  var _getEvaluatedStyles2 = getEvaluatedStyles(style, {\n    text: text,\n    tick: tick,\n    tickValue: tickValue,\n    index: index,\n    ticks: ticks,\n    stringTicks: stringTicks,\n    radius: radius,\n    scale: scale,\n    axisType: axisType\n  }),\n      labelStyle = _getEvaluatedStyles2.labelStyle;\n\n  var tickLabelComponent = props.tickLabelComponent;\n  var labelPlacement = tickLabelComponent.props && tickLabelComponent.props.labelPlacement ? tickLabelComponent.props.labelPlacement : props.labelPlacement;\n  var tickPadding = labelStyle.padding || 0;\n  var angularPadding = 0; // TODO: do some geometry\n\n  var axisAngle = axisType === "radial" ? getAxisAngle(props, scale) : undefined;\n  var labelAngle = axisType === "angular" ? helpers/* radiansToDegrees */.vi(scale(tickValue)) : axisAngle + angularPadding;\n  var textAngle = labelStyle.angle === undefined ? label_helpers/* getPolarAngle */.Sw(assign_default()({}, props, {\n    labelPlacement: labelPlacement\n  }), labelAngle) : labelStyle.angle;\n  var labelRadius = axisType === "angular" ? radius + tickPadding : scale(tickValue);\n  var textAnchor = labelStyle.textAnchor || label_helpers/* getPolarTextAnchor */.Nf(assign_default()({}, props, {\n    labelPlacement: labelPlacement\n  }), labelAngle);\n  return {\n    index: index,\n    datum: tick,\n    style: labelStyle,\n    angle: textAngle,\n    textAnchor: textAnchor,\n    text: text,\n    x: labelRadius * Math.cos(helpers/* degreesToRadians */.Ht(labelAngle)) + origin.x,\n    y: -labelRadius * Math.sin(helpers/* degreesToRadians */.Ht(labelAngle)) + origin.y\n  };\n}; // eslint-disable-next-line max-params\n\n\nvar getGridProps = function (props, calculatedValues, tickValue, index) {\n  var axisType = calculatedValues.axisType,\n      radius = calculatedValues.radius,\n      style = calculatedValues.style,\n      scale = calculatedValues.scale,\n      stringTicks = calculatedValues.stringTicks,\n      ticks = calculatedValues.ticks,\n      tickFormat = calculatedValues.tickFormat,\n      origin = calculatedValues.origin;\n  var text = tickFormat(tickValue, index, ticks);\n  var startAngle = props.startAngle,\n      endAngle = props.endAngle,\n      _props$innerRadius = props.innerRadius,\n      innerRadius = _props$innerRadius === void 0 ? 0 : _props$innerRadius;\n  var tick = stringTicks ? stringTicks[index] : tickValue;\n\n  var _getEvaluatedStyles3 = getEvaluatedStyles(style, {\n    tick: tick,\n    tickValue: tickValue,\n    index: index,\n    ticks: ticks,\n    stringTicks: stringTicks,\n    radius: radius,\n    scale: scale,\n    axisType: axisType,\n    text: text\n  }),\n      gridStyle = _getEvaluatedStyles3.gridStyle;\n\n  var angle = scale(tickValue);\n  return axisType === "angular" ? {\n    index: index,\n    datum: tick,\n    style: gridStyle,\n    x1: getPosition(radius, angle, "x") + origin.x,\n    y1: getPosition(radius, angle, "y") + origin.y,\n    x2: getPosition(innerRadius, angle, "x") + origin.x,\n    y2: getPosition(innerRadius, angle, "y") + origin.y\n  } : {\n    style: gridStyle,\n    index: index,\n    datum: tick,\n    cx: origin.x,\n    cy: origin.y,\n    r: scale(tickValue),\n    startAngle: startAngle,\n    endAngle: endAngle\n  };\n};\n\nvar getAxisLabelProps = function (props, calculatedValues) {\n  var axisType = calculatedValues.axisType,\n      radius = calculatedValues.radius,\n      style = calculatedValues.style,\n      scale = calculatedValues.scale,\n      origin = calculatedValues.origin;\n  var axisLabelComponent = props.axisLabelComponent;\n\n  if (axisType !== "radial") {\n    return {};\n  }\n\n  var labelPlacement = axisLabelComponent.props && axisLabelComponent.props.labelPlacement ? axisLabelComponent.props.labelPlacement : props.labelPlacement;\n  var labelStyle = style && style.axisLabel || {};\n  var axisAngle = axisType === "radial" ? getAxisAngle(props, scale) : undefined;\n  var textAngle = labelStyle.angle === undefined ? label_helpers/* getPolarAngle */.Sw(assign_default()({}, props, {\n    labelPlacement: labelPlacement\n  }), axisAngle) : labelStyle.angle;\n  var labelRadius = radius + (labelStyle.padding || 0);\n  var textAnchor = labelStyle.textAnchor || label_helpers/* getPolarTextAnchor */.Nf(assign_default()({}, props, {\n    labelPlacement: labelPlacement\n  }), axisAngle);\n  var verticalAnchor = labelStyle.verticalAnchor || label_helpers/* getPolarVerticalAnchor */.nV(assign_default()({}, props, {\n    labelPlacement: labelPlacement\n  }), axisAngle);\n  return {\n    style: labelStyle,\n    angle: textAngle,\n    textAnchor: textAnchor,\n    verticalAnchor: verticalAnchor,\n    text: props.label,\n    x: getPosition(labelRadius, helpers/* degreesToRadians */.Ht(axisAngle), "x") + origin.x,\n    y: getPosition(labelRadius, helpers/* degreesToRadians */.Ht(axisAngle), "y") + origin.y\n  };\n};\n\nvar getAxisProps = function (modifiedProps, calculatedValues) {\n  var style = calculatedValues.style,\n      axisType = calculatedValues.axisType,\n      radius = calculatedValues.radius,\n      scale = calculatedValues.scale,\n      origin = calculatedValues.origin;\n  var startAngle = modifiedProps.startAngle,\n      endAngle = modifiedProps.endAngle,\n      _modifiedProps$innerR = modifiedProps.innerRadius,\n      innerRadius = _modifiedProps$innerR === void 0 ? 0 : _modifiedProps$innerR;\n  var axisAngle = axisType === "radial" ? helpers/* degreesToRadians */.Ht(getAxisAngle(modifiedProps, scale)) : undefined;\n  return axisType === "radial" ? {\n    style: style.axis,\n    x1: getPosition(innerRadius, axisAngle, "x") + origin.x,\n    x2: getPosition(radius, axisAngle, "x") + origin.x,\n    y1: getPosition(innerRadius, axisAngle, "y") + origin.y,\n    y2: getPosition(radius, axisAngle, "y") + origin.y\n  } : {\n    style: style.axis,\n    cx: origin.x,\n    cy: origin.y,\n    r: radius,\n    startAngle: startAngle,\n    endAngle: endAngle\n  };\n};\n\nvar getCalculatedValues = function (props) {\n  props = assign_default()({\n    polar: true\n  }, props);\n  var defaultStyles = getStyleObject(props);\n  var style = getStyles(props, defaultStyles);\n  var padding = helpers/* getPadding */.tQ(props);\n  var axis = victory_util_axis/* getAxis */.dd(props);\n  var axisType = getAxisType(props);\n  var stringTicks = victory_util_axis/* stringTicks */.kM(props) ? props.tickValues : undefined;\n  var domain = victory_util_axis/* getDomain */.ge(props, axis);\n  var range = getRange(props, axis);\n  var scale = getScale(props);\n  var initialTicks = victory_util_axis/* getTicks */.fj(props, scale);\n  var ticks = axisType === "angular" ? filterTicks(initialTicks, scale) : initialTicks;\n  var tickFormat = victory_util_axis/* getTickFormat */.Js(props, scale);\n  var radius = getRadius(props);\n  var origin = helpers/* getPolarOrigin */.IW(props);\n  return {\n    axis: axis,\n    style: style,\n    padding: padding,\n    stringTicks: stringTicks,\n    axisType: axisType,\n    scale: scale,\n    ticks: ticks,\n    tickFormat: tickFormat,\n    domain: domain,\n    range: range,\n    radius: radius,\n    origin: origin\n  };\n};\n\nvar getBaseProps = function (props, fallbackProps) {\n  props = victory_util_axis/* modifyProps */.TY(props, fallbackProps);\n  var calculatedValues = getCalculatedValues(props);\n  var style = calculatedValues.style,\n      scale = calculatedValues.scale,\n      ticks = calculatedValues.ticks,\n      domain = calculatedValues.domain;\n  var _props = props,\n      width = _props.width,\n      height = _props.height,\n      standalone = _props.standalone,\n      theme = _props.theme,\n      name = _props.name;\n  var axisProps = getAxisProps(props, calculatedValues);\n  var axisLabelProps = getAxisLabelProps(props, calculatedValues);\n  var initialChildProps = {\n    parent: {\n      style: style.parent,\n      ticks: ticks,\n      scale: scale,\n      width: width,\n      height: height,\n      domain: domain,\n      standalone: standalone,\n      theme: theme,\n      name: name\n    }\n  };\n  return ticks.reduce(function (childProps, tick, index) {\n    childProps[index] = {\n      axis: axisProps,\n      axisLabel: axisLabelProps,\n      ticks: getTickProps(props, calculatedValues, tick, index),\n      tickLabels: getTickLabelProps(props, calculatedValues, tick, index),\n      grid: getGridProps(props, calculatedValues, tick, index)\n    };\n    return childProps;\n  }, initialChildProps);\n};\n;// CONCATENATED MODULE: ./node_modules/victory-polar-axis/es/victory-polar-axis.js\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n};\nvar options = {\n  components: [{\n    name: "axis",\n    index: 0\n  }, {\n    name: "axisLabel",\n    index: 0\n  }, {\n    name: "grid"\n  }, {\n    name: "parent",\n    index: "parent"\n  }, {\n    name: "ticks"\n  }, {\n    name: "tickLabels"\n  }]\n};\n\nvar VictoryPolarAxis = /*#__PURE__*/function (_React$Component) {\n  _inherits(VictoryPolarAxis, _React$Component);\n\n  var _super = _createSuper(VictoryPolarAxis);\n\n  function VictoryPolarAxis() {\n    _classCallCheck(this, VictoryPolarAxis);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(VictoryPolarAxis, [{\n    key: "renderAxisLine",\n    value: function renderAxisLine(props) {\n      var dependentAxis = props.dependentAxis;\n      var axisComponent = dependentAxis ? props.axisComponent : props.circularAxisComponent;\n      var axisProps = this.getComponentProps(axisComponent, "axis", 0);\n      return /*#__PURE__*/react.cloneElement(axisComponent, axisProps);\n    }\n  }, {\n    key: "renderLabel",\n    value: function renderLabel(props) {\n      var axisLabelComponent = props.axisLabelComponent,\n          dependentAxis = props.dependentAxis,\n          label = props.label;\n\n      if (!label || !dependentAxis) {\n        return null;\n      }\n\n      var axisLabelProps = this.getComponentProps(axisLabelComponent, "axisLabel", 0);\n      return /*#__PURE__*/react.cloneElement(axisLabelComponent, axisLabelProps);\n    }\n  }, {\n    key: "renderAxis",\n    value: function renderAxis(props) {\n      var _this = this;\n\n      var tickComponent = props.tickComponent,\n          tickLabelComponent = props.tickLabelComponent,\n          name = props.name;\n\n      var shouldRender = function (componentProps) {\n        var _componentProps$style = componentProps.style,\n            style = _componentProps$style === void 0 ? {} : _componentProps$style,\n            _componentProps$event = componentProps.events,\n            events = _componentProps$event === void 0 ? {} : _componentProps$event;\n        var visible = style.stroke !== "transparent" && style.stroke !== "none" && style.strokeWidth !== 0;\n        return visible || !isEmpty_default()(events);\n      };\n\n      var axisType = props.dependentAxis ? "radial" : "angular";\n      var gridComponent = axisType === "radial" ? props.circularGridComponent : props.gridComponent;\n      var tickComponents = this.dataKeys.map(function (key, index) {\n        var tickProps = assign_default()({\n          key: "".concat(name, "-tick-").concat(key)\n        }, _this.getComponentProps(tickComponent, "ticks", index));\n\n        var TickComponent = /*#__PURE__*/react.cloneElement(tickComponent, tickProps);\n        return shouldRender(TickComponent.props) ? TickComponent : undefined;\n      }).filter(Boolean);\n      var gridComponents = this.dataKeys.map(function (key, index) {\n        var gridProps = assign_default()({\n          key: "".concat(name, "-grid-").concat(key)\n        }, _this.getComponentProps(gridComponent, "grid", index));\n\n        var GridComponent = /*#__PURE__*/react.cloneElement(gridComponent, gridProps);\n        return shouldRender(GridComponent.props) ? GridComponent : undefined;\n      }).filter(Boolean);\n      var tickLabelComponents = this.dataKeys.map(function (key, index) {\n        var tickLabelProps = assign_default()({\n          key: "".concat(name, "-tick-").concat(key)\n        }, _this.getComponentProps(tickLabelComponent, "tickLabels", index));\n\n        return /*#__PURE__*/react.cloneElement(tickLabelComponent, tickLabelProps);\n      });\n      var axis = this.renderAxisLine(props);\n      var axisLabel = this.renderLabel(props);\n      var children = [axis, axisLabel].concat(_toConsumableArray(tickComponents), _toConsumableArray(gridComponents), _toConsumableArray(tickLabelComponents));\n      return this.renderGroup(props, children);\n    } // Overridden in victory-native\n\n  }, {\n    key: "renderGroup",\n    value: function renderGroup(props, children) {\n      var groupComponent = props.groupComponent;\n      return /*#__PURE__*/react.cloneElement(groupComponent, {}, children);\n    }\n  }, {\n    key: "shouldAnimate",\n    value: function shouldAnimate() {\n      return !!this.props.animate;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var animationWhitelist = VictoryPolarAxis.animationWhitelist;\n      var props = victory_util_axis/* modifyProps */.TY(this.props, fallbackProps);\n\n      if (this.shouldAnimate()) {\n        return this.animateComponent(props, animationWhitelist);\n      }\n\n      var children = this.renderAxis(props);\n      return props.standalone ? this.renderContainer(props.containerComponent, children) : children;\n    }\n  }]);\n\n  return VictoryPolarAxis;\n}(react.Component);\n\nVictoryPolarAxis.animationWhitelist = ["style", "domain", "range", "tickCount", "tickValues", "padding", "width", "height"];\nVictoryPolarAxis.displayName = "VictoryAxis";\nVictoryPolarAxis.role = "axis";\nVictoryPolarAxis.defaultTransitions = {\n  onExit: {\n    duration: 500\n  },\n  onEnter: {\n    duration: 500\n  }\n};\nVictoryPolarAxis.propTypes = _objectSpread(_objectSpread({}, common_props/* CommonProps.baseProps */.l.baseProps), {}, {\n  axisAngle: (prop_types_default()).number,\n  axisComponent: (prop_types_default()).element,\n  axisLabelComponent: (prop_types_default()).element,\n  axisValue: prop_types_default().oneOfType([(prop_types_default()).number, (prop_types_default()).string, (prop_types_default()).object]),\n  categories: prop_types_default().oneOfType([prop_types_default().arrayOf((prop_types_default()).string), prop_types_default().shape({\n    x: prop_types_default().arrayOf((prop_types_default()).string),\n    y: prop_types_default().arrayOf((prop_types_default()).string)\n  })]),\n  circularAxisComponent: (prop_types_default()).element,\n  circularGridComponent: (prop_types_default()).element,\n  containerComponent: (prop_types_default()).element,\n  dependentAxis: (prop_types_default()).bool,\n  disableInlineStyles: (prop_types_default()).bool,\n  endAngle: (prop_types_default()).number,\n  events: prop_types_default().arrayOf(prop_types_default().shape({\n    target: prop_types_default().oneOf(["axis", "axisLabel", "grid", "ticks", "tickLabels"]),\n    eventKey: prop_types_default().oneOfType([(prop_types_default()).array, victory_util_prop_types/* allOfType */.BO([victory_util_prop_types/* integer */._L, victory_util_prop_types/* nonNegative */.A7]), (prop_types_default()).string]),\n    eventHandlers: (prop_types_default()).object\n  })),\n  gridComponent: (prop_types_default()).element,\n  innerRadius: victory_util_prop_types/* nonNegative */.A7,\n  labelPlacement: prop_types_default().oneOf(["parallel", "perpendicular", "vertical"]),\n  startAngle: (prop_types_default()).number,\n  stringMap: (prop_types_default()).object,\n  style: prop_types_default().shape({\n    parent: (prop_types_default()).object,\n    axis: (prop_types_default()).object,\n    axisLabel: (prop_types_default()).object,\n    grid: (prop_types_default()).object,\n    ticks: (prop_types_default()).object,\n    tickLabels: (prop_types_default()).object\n  }),\n  tickComponent: (prop_types_default()).element,\n  tickCount: victory_util_prop_types/* allOfType */.BO([victory_util_prop_types/* integer */._L, victory_util_prop_types/* greaterThanZero */.KO]),\n  tickFormat: prop_types_default().oneOfType([(prop_types_default()).func, victory_util_prop_types/* homogeneousArray */.xx]),\n  tickLabelComponent: (prop_types_default()).element,\n  tickValues: victory_util_prop_types/* homogeneousArray */.xx\n});\nVictoryPolarAxis.defaultProps = {\n  axisComponent: /*#__PURE__*/react.createElement(line_segment/* LineSegment */.c, null),\n  axisLabelComponent: /*#__PURE__*/react.createElement(victory_label/* VictoryLabel */.X, null),\n  circularAxisComponent: /*#__PURE__*/react.createElement(arc/* Arc */.w, null),\n  circularGridComponent: /*#__PURE__*/react.createElement(arc/* Arc */.w, null),\n  containerComponent: /*#__PURE__*/react.createElement(victory_container/* VictoryContainer */._, null),\n  endAngle: 360,\n  gridComponent: /*#__PURE__*/react.createElement(line_segment/* LineSegment */.c, null),\n  groupComponent: /*#__PURE__*/react.createElement("g", {\n    role: "presentation"\n  }),\n  labelPlacement: "parallel",\n  startAngle: 0,\n  standalone: true,\n  theme: victory_theme/* VictoryTheme.grayscale */.J.grayscale,\n  tickComponent: /*#__PURE__*/react.createElement(line_segment/* LineSegment */.c, null),\n  tickLabelComponent: /*#__PURE__*/react.createElement(victory_label/* VictoryLabel */.X, null)\n};\nVictoryPolarAxis.getDomain = victory_util_axis/* getDomain */.ge;\nVictoryPolarAxis.getAxis = victory_util_axis/* getAxis */.dd;\nVictoryPolarAxis.getScale = getScale;\n\nVictoryPolarAxis.getStyles = function (props) {\n  return getStyles(props, fallbackProps.style);\n};\n\nVictoryPolarAxis.getBaseProps = function (props) {\n  return getBaseProps(props, fallbackProps);\n};\n\nVictoryPolarAxis.expectedComponents = ["axisComponent", "circularAxisComponent", "groupComponent", "containerComponent", "tickComponent", "tickLabelComponent", "gridComponent", "circularGridComponent"];\n/* harmony default export */ const victory_polar_axis = ((0,add_events/* addEvents */.o)(VictoryPolarAxis, options));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22528\n')}}]);